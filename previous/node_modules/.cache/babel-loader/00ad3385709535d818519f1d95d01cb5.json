{"ast":null,"code":"import { useRef } from 'react';\nimport { useDidUpdate } from '@mantine/hooks';\n\nfunction useAccordionFocus(itemsCount) {\n  const controlsRefs = useRef([]);\n\n  const handleItemKeydown = index => event => {\n    var _a, _b;\n\n    if (event.code === \"ArrowDown\") {\n      event.preventDefault();\n      const nextFocusElement = controlsRefs.current[index + 1];\n\n      if (nextFocusElement) {\n        nextFocusElement.focus();\n      } else {\n        (_a = controlsRefs.current[0]) == null ? void 0 : _a.focus();\n      }\n    }\n\n    if (event.code === \"ArrowUp\") {\n      event.preventDefault();\n      const previousFocusElement = controlsRefs.current[index - 1];\n\n      if (previousFocusElement) {\n        previousFocusElement.focus();\n      } else {\n        (_b = controlsRefs.current[controlsRefs.current.length - 1]) == null ? void 0 : _b.focus();\n      }\n    }\n  };\n\n  const assignControlRef = index => node => {\n    controlsRefs.current[index] = node;\n  };\n\n  useDidUpdate(() => {\n    controlsRefs.current = controlsRefs.current.slice(0, itemsCount);\n  }, [itemsCount]);\n  return {\n    handleItemKeydown,\n    assignControlRef\n  };\n}\n\nexport { useAccordionFocus };","map":{"version":3,"mappings":";;;AAEO,SAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AAC5C,QAAMC,YAAY,GAAGC,MAAM,CAAC,EAAD,CAA3B;;AACA,QAAMC,iBAAiB,GAAIC,KAAD,IAAYC,KAAD,IAAW;AAC9C,QAAIC,EAAJ,EAAQC,EAAR;;AACA,QAAIF,KAAK,CAACG,IAAN,KAAe,WAAnB,EAAgC;AAC9BH,WAAK,CAACI,cAAN;AACA,YAAMC,gBAAgB,GAAGT,YAAY,CAACU,OAAb,CAAqBP,KAAK,GAAG,CAA7B,CAAzB;;AACA,UAAIM,gBAAJ,EAAsB;AACpBA,wBAAgB,CAACE,KAAjB;AACD,OAFD,MAEO;AACL,SAACN,EAAE,GAAGL,YAAY,CAACU,OAAb,CAAqB,CAArB,CAAN,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDL,EAAE,CAACM,KAAH,EAAlD;AACD;AACF;;AACD,QAAIP,KAAK,CAACG,IAAN,KAAe,SAAnB,EAA8B;AAC5BH,WAAK,CAACI,cAAN;AACA,YAAMI,oBAAoB,GAAGZ,YAAY,CAACU,OAAb,CAAqBP,KAAK,GAAG,CAA7B,CAA7B;;AACA,UAAIS,oBAAJ,EAA0B;AACxBA,4BAAoB,CAACD,KAArB;AACD,OAFD,MAEO;AACL,SAACL,EAAE,GAAGN,YAAY,CAACU,OAAb,CAAqBV,YAAY,CAACU,OAAb,CAAqBG,MAArB,GAA8B,CAAnD,CAAN,KAAgE,IAAhE,GAAuE,KAAK,CAA5E,GAAgFP,EAAE,CAACK,KAAH,EAAhF;AACD;AACF;AACF,GApBD;;AAqBA,QAAMG,gBAAgB,GAAIX,KAAD,IAAYY,IAAD,IAAU;AAC5Cf,gBAAY,CAACU,OAAb,CAAqBP,KAArB,IAA8BY,IAA9B;AACD,GAFD;;AAGAC,cAAY,CAAC,MAAM;AACjBhB,gBAAY,CAACU,OAAb,GAAuBV,YAAY,CAACU,OAAb,CAAqBO,KAArB,CAA2B,CAA3B,EAA8BlB,UAA9B,CAAvB;AACD,GAFW,EAET,CAACA,UAAD,CAFS,CAAZ;AAGA,SAAO;AAAEG,qBAAF;AAAqBY;AAArB,GAAP;AACF","names":["useAccordionFocus","itemsCount","controlsRefs","useRef","handleItemKeydown","index","event","_a","_b","code","preventDefault","nextFocusElement","current","focus","previousFocusElement","length","assignControlRef","node","useDidUpdate","slice"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Accordion/use-accordion-focus/use-accordion-focus.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '@mantine/hooks';\n\nexport function useAccordionFocus(itemsCount: number) {\n  const controlsRefs = useRef<HTMLButtonElement[]>([]);\n\n  const handleItemKeydown = (index: number) => (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    if (event.code === 'ArrowDown') {\n      event.preventDefault();\n      const nextFocusElement = controlsRefs.current[index + 1];\n      if (nextFocusElement) {\n        nextFocusElement.focus();\n      } else {\n        controlsRefs.current[0]?.focus();\n      }\n    }\n\n    if (event.code === 'ArrowUp') {\n      event.preventDefault();\n      const previousFocusElement = controlsRefs.current[index - 1];\n      if (previousFocusElement) {\n        previousFocusElement.focus();\n      } else {\n        controlsRefs.current[controlsRefs.current.length - 1]?.focus();\n      }\n    }\n  };\n\n  const assignControlRef = (index: number) => (node: HTMLButtonElement) => {\n    controlsRefs.current[index] = node;\n  };\n\n  useDidUpdate(() => {\n    controlsRefs.current = controlsRefs.current.slice(0, itemsCount);\n  }, [itemsCount]);\n\n  return { handleItemKeydown, assignControlRef };\n}\n"]},"metadata":{},"sourceType":"module"}