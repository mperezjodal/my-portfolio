{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nimport { useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nfunction useTransition(_ref) {\n  let {\n    duration,\n    exitDuration,\n    timingFunction,\n    mounted,\n    onEnter,\n    onExit,\n    onEntered,\n    onExited\n  } = _ref;\n  const theme = useMantineTheme();\n  const reduceMotion = useReducedMotion();\n  const [transitionStatus, setStatus] = useState(mounted ? \"entered\" : \"exited\");\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const timeoutRef = useRef(-1);\n\n  const handleStateChange = shouldMount => {\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n    setStatus(shouldMount ? \"pre-entering\" : \"pre-exiting\");\n    window.clearTimeout(timeoutRef.current);\n\n    const _duration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n\n    setTransitionDuration(_duration);\n\n    if (_duration === 0) {\n      typeof preHandler === \"function\" && preHandler();\n      typeof handler === \"function\" && handler();\n      setStatus(shouldMount ? \"entered\" : \"exited\");\n    } else {\n      const preStateTimeout = window.setTimeout(() => {\n        typeof preHandler === \"function\" && preHandler();\n        setStatus(shouldMount ? \"entering\" : \"exiting\");\n      }, 10);\n      timeoutRef.current = window.setTimeout(() => {\n        window.clearTimeout(preStateTimeout);\n        typeof handler === \"function\" && handler();\n        setStatus(shouldMount ? \"entered\" : \"exited\");\n      }, _duration);\n    }\n  };\n\n  useDidUpdate(() => {\n    handleStateChange(mounted);\n  }, [mounted]);\n  useEffect(() => () => window.clearTimeout(timeoutRef.current), []);\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || theme.transitionTimingFunction\n  };\n}\n\nexport { useTransition };","map":{"version":3,"mappings":";;;;AAGO,SAASA,aAAT,OASJ;AAAA,MAT2B;AAC5BC,YAD4B;AAE5BC,gBAF4B;AAG5BC,kBAH4B;AAI5BC,WAJ4B;AAK5BC,WAL4B;AAM5BC,UAN4B;AAO5BC,aAP4B;AAQ5BC;AAR4B,GAS3B;AACD,QAAMC,KAAK,GAAGC,eAAe,EAA7B;AACA,QAAMC,YAAY,GAAGC,gBAAgB,EAArC;AACA,QAAM,CAACC,gBAAD,EAAmBC,SAAnB,IAAgCC,QAAQ,CAACX,OAAO,GAAG,SAAH,GAAe,QAAvB,CAA9C;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8CF,QAAQ,CAACJ,YAAY,GAAG,CAAH,GAAOV,QAApB,CAA5D;AACA,QAAMiB,UAAU,GAAGC,MAAM,CAAC,CAAC,CAAF,CAAzB;;AACA,QAAMC,iBAAiB,GAAIC,WAAD,IAAiB;AACzC,UAAMC,UAAU,GAAGD,WAAW,GAAGhB,OAAH,GAAaC,MAA3C;AACA,UAAMiB,OAAO,GAAGF,WAAW,GAAGd,SAAH,GAAeC,QAA1C;AACAM,aAAS,CAACO,WAAW,GAAG,cAAH,GAAoB,aAAhC,CAAT;AACAG,UAAM,CAACC,YAAP,CAAoBP,UAAU,CAACQ,OAA/B;;AACA,UAAMC,SAAS,GAAGhB,YAAY,GAAG,CAAH,GAAOU,WAAW,GAAGpB,QAAH,GAAcC,YAA9D;;AACAe,yBAAqB,CAACU,SAAD,CAArB;;AACA,QAAIA,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAOL,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,EAA9C;AACA,aAAOC,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAAxC;AACAT,eAAS,CAACO,WAAW,GAAG,SAAH,GAAe,QAA3B,CAAT;AACD,KAJD,MAIO;AACL,YAAMO,eAAe,GAAGJ,MAAM,CAACK,UAAP,CAAkB,MAAM;AAC9C,eAAOP,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,EAA9C;AACAR,iBAAS,CAACO,WAAW,GAAG,UAAH,GAAgB,SAA5B,CAAT;AACD,OAHuB,EAGrB,EAHqB,CAAxB;AAIAH,gBAAU,CAACQ,OAAX,GAAqBF,MAAM,CAACK,UAAP,CAAkB,MAAM;AAC3CL,cAAM,CAACC,YAAP,CAAoBG,eAApB;AACA,eAAOL,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAAxC;AACAT,iBAAS,CAACO,WAAW,GAAG,SAAH,GAAe,QAA3B,CAAT;AACD,OAJoB,EAIlBM,SAJkB,CAArB;AAKD;AACF,GAtBD;;AAuBAG,cAAY,CAAC,MAAM;AACjBV,qBAAiB,CAAChB,OAAD,CAAjB;AACD,GAFW,EAET,CAACA,OAAD,CAFS,CAAZ;AAGA2B,WAAS,CAAC,MAAM,MAAMP,MAAM,CAACC,YAAP,CAAoBP,UAAU,CAACQ,OAA/B,CAAb,EAAsD,EAAtD,CAAT;AACA,SAAO;AACLV,sBADK;AAELH,oBAFK;AAGLmB,4BAAwB,EAAE7B,cAAc,IAAIM,KAAK,CAACuB;AAH7C,GAAP;AAKF","names":["useTransition","duration","exitDuration","timingFunction","mounted","onEnter","onExit","onEntered","onExited","theme","useMantineTheme","reduceMotion","useReducedMotion","transitionStatus","setStatus","useState","transitionDuration","setTransitionDuration","timeoutRef","useRef","handleStateChange","shouldMount","preHandler","handler","window","clearTimeout","current","_duration","preStateTimeout","setTimeout","useDidUpdate","useEffect","transitionTimingFunction"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Transition/use-transition.ts"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nexport type TransitionStatus =\n  | 'entered'\n  | 'exited'\n  | 'entering'\n  | 'exiting'\n  | 'pre-exiting'\n  | 'pre-entering';\n\ninterface UseTransition {\n  duration: number;\n  exitDuration: number;\n  timingFunction: string;\n  mounted: boolean;\n  onEnter?(): void;\n  onExit?(): void;\n  onEntered?(): void;\n  onExited?(): void;\n}\n\nexport function useTransition({\n  duration,\n  exitDuration,\n  timingFunction,\n  mounted,\n  onEnter,\n  onExit,\n  onEntered,\n  onExited,\n}: UseTransition) {\n  const theme = useMantineTheme();\n  const reduceMotion = useReducedMotion();\n  const [transitionStatus, setStatus] = useState<TransitionStatus>(mounted ? 'entered' : 'exited');\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const timeoutRef = useRef<number>(-1);\n\n  const handleStateChange = (shouldMount: boolean) => {\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n\n    setStatus(shouldMount ? 'pre-entering' : 'pre-exiting');\n    window.clearTimeout(timeoutRef.current);\n    const _duration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(_duration);\n\n    if (_duration === 0) {\n      typeof preHandler === 'function' && preHandler();\n      typeof handler === 'function' && handler();\n      setStatus(shouldMount ? 'entered' : 'exited');\n    } else {\n      const preStateTimeout = window.setTimeout(() => {\n        typeof preHandler === 'function' && preHandler();\n        setStatus(shouldMount ? 'entering' : 'exiting');\n      }, 10);\n\n      timeoutRef.current = window.setTimeout(() => {\n        window.clearTimeout(preStateTimeout);\n        typeof handler === 'function' && handler();\n        setStatus(shouldMount ? 'entered' : 'exited');\n      }, _duration);\n    }\n  };\n\n  useDidUpdate(() => {\n    handleStateChange(mounted);\n  }, [mounted]);\n\n  useEffect(() => () => window.clearTimeout(timeoutRef.current), []);\n\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || theme.transitionTimingFunction,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}