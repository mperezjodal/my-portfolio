{"ast":null,"code":"import { useRef, useEffect } from 'react';\nvar DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\n\nfunction useClickOutside(handler, events, nodes) {\n  var ref = useRef();\n  useEffect(function () {\n    var listener = function listener(event) {\n      var _a;\n\n      if (Array.isArray(nodes)) {\n        var shouldIgnore = (_a = event.target) == null ? void 0 : _a.hasAttribute(\"data-ignore-outside-clicks\");\n        var shouldTrigger = nodes.every(function (node) {\n          return !!node && !node.contains(event.target);\n        });\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach(function (fn) {\n      return document.addEventListener(fn, listener);\n    });\n    return function () {\n      (events || DEFAULT_EVENTS).forEach(function (fn) {\n        return document.removeEventListener(fn, listener);\n      });\n    };\n  }, [ref, handler, nodes]);\n  return ref;\n}\n\nexport { useClickOutside };","map":{"version":3,"mappings":";AACA,IAAMA,cAAc,GAAG,CAAC,WAAD,EAAc,YAAd,CAAvB;;AACO,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiD;AACtD,MAAMC,GAAG,GAAGC,MAAM,EAAlB;AACAC,WAAS,CAAC,YAAM;AACd,QAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,UAAIC,EAAJ;;AACA,UAAIC,KAAK,CAACC,OAAN,CAAcR,KAAd,CAAJ,EAA0B;AACxB,YAAMS,YAAY,GAAG,CAACH,EAAE,GAAGD,KAAK,CAACK,MAAZ,KAAuB,IAAvB,GAA8B,KAAK,CAAnC,GAAuCJ,EAAE,CAACK,YAAH,CAAgB,4BAAhB,CAA5D;AACA,YAAMC,aAAa,GAAGZ,KAAK,CAACa,KAAN,CAAY,UAACC,IAAD;AAAA,iBAAU,CAAC,CAACA,IAAF,IAAU,CAACA,IAAI,CAACC,QAAL,CAAcV,KAAK,CAACK,MAApB,CAArB;AAAA,SAAZ,CAAtB;AACAE,qBAAa,IAAI,CAACH,YAAlB,IAAkCX,OAAO,EAAzC;AACD,OAJD,MAIO,IAAIG,GAAG,CAACe,OAAJ,IAAe,CAACf,GAAG,CAACe,OAAJ,CAAYD,QAAZ,CAAqBV,KAAK,CAACK,MAA3B,CAApB,EAAwD;AAC7DZ,eAAO;AACR;AACF,KATD;;AAUA,KAACC,MAAM,IAAIH,cAAX,EAA2BqB,OAA3B,CAAmC,UAACC,EAAD;AAAA,aAAQC,QAAQ,CAACC,gBAAT,CAA0BF,EAA1B,EAA8Bd,QAA9B,CAAR;AAAA,KAAnC;AACA,WAAO,YAAM;AACX,OAACL,MAAM,IAAIH,cAAX,EAA2BqB,OAA3B,CAAmC,UAACC,EAAD;AAAA,eAAQC,QAAQ,CAACE,mBAAT,CAA6BH,EAA7B,EAAiCd,QAAjC,CAAR;AAAA,OAAnC;AACD,KAFD;AAGD,GAfQ,EAeN,CAACH,GAAD,EAAMH,OAAN,EAAeE,KAAf,CAfM,CAAT;AAgBA,SAAOC,GAAP;AACF","names":["DEFAULT_EVENTS","useClickOutside","handler","events","nodes","ref","useRef","useEffect","listener","event","_a","Array","isArray","shouldIgnore","target","hasAttribute","shouldTrigger","every","node","contains","current","forEach","fn","document","addEventListener","removeEventListener"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-click-outside/use-click-outside.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst DEFAULT_EVENTS = ['mousedown', 'touchstart'];\n\nexport function useClickOutside<T extends HTMLElement = any>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: HTMLElement[]\n) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = event.target?.hasAttribute('data-ignore-outside-clicks');\n        const shouldTrigger = nodes.every((node) => !!node && !node.contains(event.target));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) => document.addEventListener(fn, listener));\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}