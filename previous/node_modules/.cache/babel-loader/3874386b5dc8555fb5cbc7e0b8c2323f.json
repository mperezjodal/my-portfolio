{"ast":null,"code":"import { Children } from 'react';\n\nfunction findChildByType(children, type) {\n  return Children.toArray(children).find(function (item) {\n    return item.type === type;\n  });\n}\n\nexport { findChildByType };","map":{"version":3,"mappings":";;AACO,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,IAAnC,EAAyC;AAC9C,SAAOC,QAAQ,CAACC,OAAT,CAAiBH,QAAjB,EAA2BI,IAA3B,CAAgC,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACJ,IAAL,KAAcA,IAAxB;AAAA,GAAhC,CAAP;AACF","names":["findChildByType","children","type","Children","toArray","find","item"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/utils/find-child-by-type/find-child-by-type.ts"],"sourcesContent":["import { ReactNode, Children, JSXElementConstructor, ReactElement } from 'react';\n\nexport function findChildByType(children: ReactNode, type: JSXElementConstructor<any>) {\n  return (Children.toArray(children) as ReactElement[]).find((item) => item.type === type);\n}\n"]},"metadata":{},"sourceType":"module"}