{"ast":null,"code":"const getRelativePosition = _ref => {\n  let {\n    axis,\n    target,\n    parent,\n    alignment,\n    offset,\n    isList\n  } = _ref;\n\n  if (!target || !parent && typeof document === \"undefined\") {\n    return 0;\n  }\n\n  const isCustomParent = !!parent;\n  const parentElement = parent || document.body;\n  const parentPosition = parentElement.getBoundingClientRect();\n  const targetPosition = target.getBoundingClientRect();\n\n  const getDiff = property => targetPosition[property] - parentPosition[property];\n\n  if (axis === \"y\") {\n    const diff = getDiff(\"top\");\n    if (diff === 0) return 0;\n\n    if (alignment === \"start\") {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n\n    if (alignment === \"end\") {\n      const distance = diff + offset - parentHeight + targetPosition.height;\n      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === \"center\") {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n\n    return 0;\n  }\n\n  if (axis === \"x\") {\n    const diff = getDiff(\"left\");\n    if (diff === 0) return 0;\n\n    if (alignment === \"start\") {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.width || !isList;\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n\n    if (alignment === \"end\") {\n      const distance = diff + offset - parentWidth + targetPosition.width;\n      const shouldScroll = distance >= -targetPosition.width || !isList;\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === \"center\") {\n      return diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n\nexport { getRelativePosition };","map":{"version":3,"mappings":"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","names":["getRelativePosition","axis","target","parent","alignment","offset","isList","document","isCustomParent","parentElement","body","parentPosition","getBoundingClientRect","targetPosition","getDiff","property","diff","distance","shouldScroll","height","parentHeight","window","innerHeight","width","parentWidth","innerWidth"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-scroll-into-view/utils/get-relative-position.ts"],"sourcesContent":["export const getRelativePosition = ({\n  axis,\n  target,\n  parent,\n  alignment,\n  offset,\n  isList,\n}): number => {\n  if (!target || (!parent && typeof document === 'undefined')) {\n    return 0;\n  }\n  const isCustomParent = !!parent;\n  const parentElement = parent || document.body;\n  const parentPosition = parentElement.getBoundingClientRect();\n  const targetPosition = target.getBoundingClientRect();\n\n  const getDiff = (property: 'top' | 'left'): number =>\n    targetPosition[property] - parentPosition[property];\n\n  if (axis === 'y') {\n    const diff = getDiff('top');\n\n    if (diff === 0) return 0;\n\n    if (alignment === 'start') {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n\n    if (alignment === 'end') {\n      const distance = diff + offset - parentHeight + targetPosition.height;\n      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === 'center') {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n\n    return 0;\n  }\n\n  if (axis === 'x') {\n    const diff = getDiff('left');\n\n    if (diff === 0) return 0;\n\n    if (alignment === 'start') {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.width || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n\n    if (alignment === 'end') {\n      const distance = diff + offset - parentWidth + targetPosition.width;\n      const shouldScroll = distance >= -targetPosition.width || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === 'center') {\n      return diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}