{"ast":null,"code":"import _toConsumableArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nfunction getSortedBreakpoints(theme, breakpoints) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  var property = \"maxWidth\" in breakpoints[0] ? \"maxWidth\" : \"minWidth\";\n\n  var sorted = _toConsumableArray(breakpoints).sort(function (a, b) {\n    return theme.fn.size({\n      size: b[property],\n      sizes: theme.breakpoints\n    }) - theme.fn.size({\n      size: a[property],\n      sizes: theme.breakpoints\n    });\n  });\n\n  return property === \"minWidth\" ? sorted.reverse() : sorted;\n}\n\nexport { getSortedBreakpoints };","map":{"version":3,"mappings":";;AAAO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqCC,WAArC,EAAkD;AACvD,MAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,WAAOD,WAAP;AACD;;AACD,MAAME,QAAQ,GAAG,cAAcF,WAAW,CAAC,CAAD,CAAzB,GAA+B,UAA/B,GAA4C,UAA7D;;AACA,MAAMG,MAAM,GAAG,mBAAIH,WAAJ,EAAiBI,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUP,KAAK,CAACQ,EAAN,CAASC,IAAT,CAAc;AAAEA,UAAI,EAAEF,CAAC,CAACJ,QAAD,CAAT;AAAqBO,WAAK,EAAEV,KAAK,CAACC;AAAlC,KAAd,IAAiED,KAAK,CAACQ,EAAN,CAASC,IAAT,CAAc;AAAEA,UAAI,EAAEH,CAAC,CAACH,QAAD,CAAT;AAAqBO,WAAK,EAAEV,KAAK,CAACC;AAAlC,KAAd,CAA3E;AAAA,GAAtB,CAAf;;AACA,SAAOE,QAAQ,KAAK,UAAb,GAA0BC,MAAM,CAACO,OAAP,EAA1B,GAA6CP,MAApD;AACF","names":["getSortedBreakpoints","theme","breakpoints","length","property","sorted","sort","a","b","fn","size","sizes","reverse"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/SimpleGrid/get-sorted-breakpoints/get-sorted-breakpoints.ts"],"sourcesContent":["import { MantineTheme } from '@mantine/styles';\nimport type { SimpleGridBreakpoint } from '../SimpleGrid.styles';\n\nexport function getSortedBreakpoints(theme: MantineTheme, breakpoints: SimpleGridBreakpoint[]) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  const property = 'maxWidth' in breakpoints[0] ? 'maxWidth' : 'minWidth';\n  const sorted = [...breakpoints].sort(\n    (a, b) =>\n      theme.fn.size({ size: b[property], sizes: theme.breakpoints }) -\n      theme.fn.size({ size: a[property], sizes: theme.breakpoints })\n  );\n\n  return property === 'minWidth' ? sorted.reverse() : sorted;\n}\n"]},"metadata":{},"sourceType":"module"}