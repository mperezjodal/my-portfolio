{"ast":null,"code":"import { useMantineTheme, useCss } from '@mantine/styles';\nimport { getSystemStyles } from './get-system-styles/get-system-styles.js';\n\nfunction extractSx(sx, theme) {\n  return typeof sx === \"function\" ? sx(theme) : sx;\n}\n\nfunction useSx(sx, systemProps, className) {\n  var theme = useMantineTheme();\n\n  var _useCss = useCss(),\n      css = _useCss.css,\n      cx = _useCss.cx;\n\n  if (Array.isArray(sx)) {\n    return cx(className, css(getSystemStyles(systemProps, theme)), sx.map(function (partial) {\n      return css(extractSx(partial, theme));\n    }));\n  }\n\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\n\nexport { useSx };","map":{"version":3,"mappings":";;;AAKA,SAASA,SAAT,CAAmBC,EAAnB,EAAuBC,KAAvB,EAA8B;AAC5B,SAAO,OAAOD,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACC,KAAD,CAA7B,GAAuCD,EAA9C;AACD;;AACM,SAASE,KAAT,CAAeF,EAAf,EAAmBG,WAAnB,EAAgCC,SAAhC,EAA2C;AAChD,MAAMH,KAAK,GAAGI,eAAe,EAA7B;;AACA,gBAAoBC,MAAM,EAA1B;AAAA,MAAQC,GAAR,WAAQA,GAAR;AAAA,MAAaC,EAAb,WAAaA,EAAb;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcV,EAAd,CAAJ,EAAuB;AACrB,WAAOQ,EAAE,CAACJ,SAAD,EAAYG,GAAG,CAACI,eAAe,CAACR,WAAD,EAAcF,KAAd,CAAhB,CAAf,EAAsDD,EAAE,CAACY,GAAH,CAAO,UAACC,OAAD;AAAA,aAAaN,GAAG,CAACR,SAAS,CAACc,OAAD,EAAUZ,KAAV,CAAV,CAAhB;AAAA,KAAP,CAAtD,CAAT;AACD;;AACD,SAAOO,EAAE,CAACJ,SAAD,EAAYG,GAAG,CAACR,SAAS,CAACC,EAAD,EAAKC,KAAL,CAAV,CAAf,EAAuCM,GAAG,CAACI,eAAe,CAACR,WAAD,EAAcF,KAAd,CAAhB,CAA1C,CAAT;AACF","names":["extractSx","sx","theme","useSx","systemProps","className","useMantineTheme","useCss","css","cx","Array","isArray","getSystemStyles","map","partial"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Box/use-sx/use-sx.ts"],"sourcesContent":["import {\n  CSSObject,\n  MantineStyleSystemProps,\n  MantineTheme,\n  useCss,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { getSystemStyles } from './get-system-styles/get-system-styles';\n\ntype Sx = CSSObject | ((theme: MantineTheme) => CSSObject);\nexport type BoxSx = Sx | Sx[];\n\nfunction extractSx(sx: Sx, theme: MantineTheme) {\n  return typeof sx === 'function' ? sx(theme) : sx;\n}\n\nexport function useSx(sx: BoxSx, systemProps: MantineStyleSystemProps, className: string) {\n  const theme = useMantineTheme();\n  const { css, cx } = useCss();\n\n  if (Array.isArray(sx)) {\n    return cx(\n      className,\n      css(getSystemStyles(systemProps, theme)),\n      sx.map((partial) => css(extractSx(partial, theme)))\n    );\n  }\n\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\n"]},"metadata":{},"sourceType":"module"}