{"ast":null,"code":"import _slicedToArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect } from 'react';\nimport { getHotkeyMatcher } from './parse-hotkey.js';\nexport { getHotkeyHandler } from './parse-hotkey.js';\n\nfunction shouldFireEvent(event) {\n  if (event.target instanceof HTMLElement) {\n    return ![\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(event.target.tagName);\n  }\n\n  return true;\n}\n\nfunction useHotkeys(hotkeys) {\n  useEffect(function () {\n    var keydownListener = function keydownListener(event) {\n      hotkeys.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            hotkey = _ref2[0],\n            handler = _ref2[1];\n\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener(\"keydown\", keydownListener);\n    return function () {\n      return document.documentElement.removeEventListener(\"keydown\", keydownListener);\n    };\n  }, [hotkeys]);\n}\n\nexport { useHotkeys };","map":{"version":3,"mappings":";;;;;AAGA,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIA,KAAK,CAACC,MAAN,YAAwBC,WAA5B,EAAyC;AACvC,WAAO,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgCC,QAAhC,CAAyCH,KAAK,CAACC,MAAN,CAAaG,OAAtD,CAAR;AACD;;AACD,SAAO,IAAP;AACD;;AACM,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAClCC,WAAS,CAAC,YAAM;AACd,QAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACR,KAAD,EAAW;AACjCM,aAAO,CAACG,OAAR,CAAgB,gBAAuB;AAAA;AAAA,YAArBC,MAAqB;AAAA,YAAbC,OAAa;;AACrC,YAAIC,gBAAgB,CAACF,MAAD,CAAhB,CAAyBV,KAAzB,KAAmCD,eAAe,CAACC,KAAD,CAAtD,EAA+D;AAC7DA,eAAK,CAACa,cAAN;AACAF,iBAAO,CAACX,KAAD,CAAP;AACD;AACF,OALD;AAMD,KAPD;;AAQAc,YAAQ,CAACC,eAAT,CAAyBC,gBAAzB,CAA0C,SAA1C,EAAqDR,eAArD;AACA,WAAO;AAAA,aAAMM,QAAQ,CAACC,eAAT,CAAyBE,mBAAzB,CAA6C,SAA7C,EAAwDT,eAAxD,CAAN;AAAA,KAAP;AACD,GAXQ,EAWN,CAACF,OAAD,CAXM,CAAT;AAYF","names":["shouldFireEvent","event","target","HTMLElement","includes","tagName","useHotkeys","hotkeys","useEffect","keydownListener","forEach","hotkey","handler","getHotkeyMatcher","preventDefault","document","documentElement","addEventListener","removeEventListener"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-hotkeys/use-hotkeys.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { getHotkeyMatcher, getHotkeyHandler } from './parse-hotkey';\n\nexport { getHotkeyHandler };\n\nexport type HotkeyItem = [string, (event: KeyboardEvent) => void];\n\nfunction shouldFireEvent(event: KeyboardEvent) {\n  if (event.target instanceof HTMLElement) {\n    return !['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName);\n  }\n  return true;\n}\n\nexport function useHotkeys(hotkeys: HotkeyItem[]) {\n  useEffect(() => {\n    const keydownListener = (event: KeyboardEvent) => {\n      hotkeys.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener('keydown', keydownListener);\n    return () => document.documentElement.removeEventListener('keydown', keydownListener);\n  }, [hotkeys]);\n}\n"]},"metadata":{},"sourceType":"module"}