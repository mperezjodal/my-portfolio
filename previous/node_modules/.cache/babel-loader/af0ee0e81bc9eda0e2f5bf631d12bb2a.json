{"ast":null,"code":"import _toConsumableArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled.js';\nimport { range } from '../utils/range/range.js';\nvar DOTS = \"dots\";\n\nfunction usePagination(_ref) {\n  var total = _ref.total,\n      _ref$siblings = _ref.siblings,\n      siblings = _ref$siblings === void 0 ? 1 : _ref$siblings,\n      _ref$boundaries = _ref.boundaries,\n      boundaries = _ref$boundaries === void 0 ? 1 : _ref$boundaries,\n      page = _ref.page,\n      _ref$initialPage = _ref.initialPage,\n      initialPage = _ref$initialPage === void 0 ? 1 : _ref$initialPage,\n      onChange = _ref.onChange;\n\n  var _useUncontrolled = useUncontrolled({\n    value: page,\n    onChange: onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage,\n    rule: function rule(_page) {\n      return typeof _page === \"number\" && _page <= total;\n    }\n  }),\n      _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n      activePage = _useUncontrolled2[0],\n      setActivePage = _useUncontrolled2[1];\n\n  var setPage = function setPage(pageNumber) {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > total) {\n      setActivePage(total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  var next = function next() {\n    return setPage(activePage + 1);\n  };\n\n  var previous = function previous() {\n    return setPage(activePage - 1);\n  };\n\n  var first = function first() {\n    return setPage(1);\n  };\n\n  var last = function last() {\n    return setPage(total);\n  };\n\n  var paginationRange = useMemo(function () {\n    var totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n\n    if (totalPageNumbers >= total) {\n      return range(1, total);\n    }\n\n    var leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    var rightSiblingIndex = Math.min(activePage + siblings, total - boundaries);\n    var shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    var shouldShowRightDots = rightSiblingIndex < total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      var leftItemCount = siblings * 2 + boundaries + 2;\n      return [].concat(_toConsumableArray(range(1, leftItemCount)), [DOTS], _toConsumableArray(range(total - (boundaries - 1), total)));\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      var rightItemCount = boundaries + 1 + 2 * siblings;\n      return [].concat(_toConsumableArray(range(1, boundaries)), [DOTS], _toConsumableArray(range(total - rightItemCount, total)));\n    }\n\n    return [].concat(_toConsumableArray(range(1, boundaries)), [DOTS], _toConsumableArray(range(leftSiblingIndex, rightSiblingIndex)), [DOTS], _toConsumableArray(range(total - boundaries + 1, total)));\n  }, [total, siblings, activePage]);\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage: setPage,\n    next: next,\n    previous: previous,\n    first: first,\n    last: last\n  };\n}\n\nexport { DOTS, usePagination };","map":{"version":3,"mappings":"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","names":["DOTS","usePagination","total","siblings","boundaries","page","initialPage","onChange","useUncontrolled","value","defaultValue","finalValue","rule","_page","activePage","setActivePage","setPage","pageNumber","next","previous","first","last","paginationRange","useMemo","totalPageNumbers","range","leftSiblingIndex","Math","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftItemCount","rightItemCount","active"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-pagination/use-pagination.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled';\nimport { range } from '../utils';\n\nexport const DOTS = 'dots';\n\nexport interface PaginationParams {\n  /** Page selected on initial render, defaults to 1 */\n  initialPage?: number;\n\n  /** Controlled active page number */\n  page?: number;\n\n  /** Total amount of pages */\n  total: number;\n\n  /** Siblings amount on left/right side of selected page, defaults to 1 */\n  siblings?: number;\n\n  /** Amount of elements visible on left/right edges, defaults to 1  */\n  boundaries?: number;\n\n  /** Callback fired after change of each page */\n  onChange?: (page: number) => void;\n}\n\nexport function usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange,\n}: PaginationParams) {\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage,\n    rule: (_page) => typeof _page === 'number' && _page <= total,\n  });\n\n  const setPage = (pageNumber: number) => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > total) {\n      setActivePage(total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(total);\n\n  const paginationRange = useMemo((): (number | 'dots')[] => {\n    // Pages count is determined as siblings (left/right) + boundaries(left/right) + currentPage + 2*DOTS\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n\n    /*\n     * If the number of pages is less than the page numbers we want to show in our\n     * paginationComponent, we return the range [1..total]\n     */\n    if (totalPageNumbers >= total) {\n      return range(1, total);\n    }\n\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, total - boundaries);\n\n    /*\n     * We do not want to show dots if there is only one position left\n     * after/before the left/right page count as that would lead to a change if our Pagination\n     * component size which we do not want\n     */\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(total - (boundaries - 1), total)];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(total - rightItemCount, total)];\n    }\n\n    return [\n      ...range(1, boundaries),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(total - boundaries + 1, total),\n    ];\n  }, [total, siblings, activePage]);\n\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}