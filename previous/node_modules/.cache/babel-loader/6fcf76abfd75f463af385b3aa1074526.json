{"ast":null,"code":"import _defineProperty from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { forwardRef, useState } from 'react';\nimport useStyles from './Thumb.styles.js';\nimport { Box } from '../../Box/Box.js';\nimport { Transition } from '../../Transition/Transition.js';\nvar Thumb = forwardRef(function (_ref, ref) {\n  var max = _ref.max,\n      min = _ref.min,\n      value = _ref.value,\n      position = _ref.position,\n      label = _ref.label,\n      dragging = _ref.dragging,\n      onMouseDown = _ref.onMouseDown,\n      color = _ref.color,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      size = _ref.size,\n      labelTransition = _ref.labelTransition,\n      labelTransitionDuration = _ref.labelTransitionDuration,\n      labelTransitionTimingFunction = _ref.labelTransitionTimingFunction,\n      labelAlwaysOn = _ref.labelAlwaysOn,\n      thumbLabel = _ref.thumbLabel,\n      _onFocus = _ref.onFocus,\n      _onBlur = _ref.onBlur,\n      showLabelOnHover = _ref.showLabelOnHover,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children;\n\n  var _useStyles = useStyles({\n    color: color,\n    size: size\n  }, {\n    classNames: classNames,\n    styles: styles,\n    name: \"Slider\"\n  }),\n      classes = _useStyles.classes,\n      cx = _useStyles.cx,\n      theme = _useStyles.theme;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n  return /* @__PURE__ */React.createElement(Box, {\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-label\": thumbLabel,\n    \"aria-valuemax\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuenow\": value,\n    ref: ref,\n    className: cx(classes.thumb, _defineProperty({}, classes.dragging, dragging)),\n    onFocus: function onFocus() {\n      setFocused(true);\n      typeof _onFocus === \"function\" && _onFocus();\n    },\n    onBlur: function onBlur() {\n      setFocused(false);\n      typeof _onBlur === \"function\" && _onBlur();\n    },\n    onTouchStart: onMouseDown,\n    onMouseDown: onMouseDown,\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    sx: {\n      left: \"\".concat(position, \"%\")\n    }\n  }, children, /* @__PURE__ */React.createElement(Transition, {\n    mounted: label != null && isVisible,\n    duration: labelTransitionDuration,\n    transition: labelTransition,\n    timingFunction: labelTransitionTimingFunction || theme.transitionTimingFunction\n  }, function (transitionStyles) {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      style: transitionStyles,\n      className: classes.label\n    }, label);\n  }));\n});\nThumb.displayName = \"@mantine/core/SliderThumb\";\nexport { Thumb };","map":{"version":3,"mappings":"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","names":["Thumb","forwardRef","ref","max","min","value","position","label","dragging","onMouseDown","color","classNames","styles","size","labelTransition","labelTransitionDuration","labelTransitionTimingFunction","labelAlwaysOn","thumbLabel","onFocus","onBlur","showLabelOnHover","children","useStyles","name","classes","cx","theme","useState","focused","setFocused","isVisible","React","createElement","Box","tabIndex","role","className","thumb","onTouchStart","onClick","event","stopPropagation","sx","left","Transition","mounted","duration","transition","timingFunction","transitionTimingFunction","transitionStyles","style","displayName"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Slider/Thumb/Thumb.tsx"],"sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, MantineColor, ClassNames } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { Transition, MantineTransition } from '../../Transition';\nimport useStyles from './Thumb.styles';\n\nexport type ThumbStylesNames = ClassNames<typeof useStyles>;\n\nexport interface ThumbProps extends DefaultProps<ThumbStylesNames> {\n  max: number;\n  min: number;\n  value: number;\n  position: number;\n  dragging: boolean;\n  color: MantineColor;\n  size: MantineNumberSize;\n  label: React.ReactNode;\n  onMouseDown(event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>): void;\n  labelTransition?: MantineTransition;\n  labelTransitionDuration?: number;\n  labelTransitionTimingFunction?: string;\n  labelAlwaysOn: boolean;\n  thumbLabel: string;\n  onFocus?(): void;\n  onBlur?(): void;\n  showLabelOnHover?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  (\n    {\n      max,\n      min,\n      value,\n      position,\n      label,\n      dragging,\n      onMouseDown,\n      color,\n      classNames,\n      styles,\n      size,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      thumbLabel,\n      onFocus,\n      onBlur,\n      showLabelOnHover,\n      children = null,\n    }: ThumbProps,\n    ref\n  ) => {\n    const { classes, cx, theme } = useStyles(\n      { color, size },\n      { classNames, styles, name: 'Slider' }\n    );\n    const [focused, setFocused] = useState(false);\n    const isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n\n    return (\n      <Box<'div'>\n        tabIndex={0}\n        role=\"slider\"\n        aria-label={thumbLabel}\n        aria-valuemax={max}\n        aria-valuemin={min}\n        aria-valuenow={value}\n        ref={ref}\n        className={cx(classes.thumb, { [classes.dragging]: dragging })}\n        onFocus={() => {\n          setFocused(true);\n          typeof onFocus === 'function' && onFocus();\n        }}\n        onBlur={() => {\n          setFocused(false);\n          typeof onBlur === 'function' && onBlur();\n        }}\n        onTouchStart={onMouseDown}\n        onMouseDown={onMouseDown}\n        onClick={(event) => event.stopPropagation()}\n        sx={{ left: `${position}%` }}\n      >\n        {children}\n        <Transition\n          mounted={label != null && isVisible}\n          duration={labelTransitionDuration}\n          transition={labelTransition}\n          timingFunction={labelTransitionTimingFunction || theme.transitionTimingFunction}\n        >\n          {(transitionStyles) => (\n            <div style={transitionStyles} className={classes.label}>\n              {label}\n            </div>\n          )}\n        </Transition>\n      </Box>\n    );\n  }\n);\n\nThumb.displayName = '@mantine/core/SliderThumb';\n"]},"metadata":{},"sourceType":"module"}