{"ast":null,"code":"function getOS() {\n  const {\n    userAgent\n  } = window.navigator;\n  const {\n    platform\n  } = window.navigator;\n  const macosPlatforms = [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"];\n  const windowsPlatforms = [\"Win32\", \"Win64\", \"Windows\", \"WinCE\"];\n  const iosPlatforms = [\"iPhone\", \"iPad\", \"iPod\"];\n  let os = \"undetermined\";\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = \"macos\";\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = \"ios\";\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = \"windows\";\n  } else if (/Android/.test(userAgent)) {\n    os = \"android\";\n  } else if (/Linux/.test(platform)) {\n    os = \"linux\";\n  }\n\n  return os;\n}\n\nfunction useOs() {\n  if (typeof window !== \"undefined\") {\n    return getOS();\n  }\n\n  return \"undetermined\";\n}\n\nexport { useOs };","map":{"version":3,"mappings":"AAAA,SAASA,KAAT,GAAiB;AACf,QAAM;AAAEC;AAAF,MAAgBC,MAAM,CAACC,SAA7B;AACA,QAAM;AAAEC;AAAF,MAAeF,MAAM,CAACC,SAA5B;AACA,QAAME,cAAc,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,QAA1B,EAAoC,QAApC,CAAvB;AACA,QAAMC,gBAAgB,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,OAA9B,CAAzB;AACA,QAAMC,YAAY,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAArB;AACA,MAAIC,EAAE,GAAG,cAAT;;AACA,MAAIH,cAAc,CAACI,OAAf,CAAuBL,QAAvB,MAAqC,CAAC,CAA1C,EAA6C;AAC3CI,MAAE,GAAG,OAAL;AACD,GAFD,MAEO,IAAID,YAAY,CAACE,OAAb,CAAqBL,QAArB,MAAmC,CAAC,CAAxC,EAA2C;AAChDI,MAAE,GAAG,KAAL;AACD,GAFM,MAEA,IAAIF,gBAAgB,CAACG,OAAjB,CAAyBL,QAAzB,MAAuC,CAAC,CAA5C,EAA+C;AACpDI,MAAE,GAAG,SAAL;AACD,GAFM,MAEA,IAAI,UAAUE,IAAV,CAAeT,SAAf,CAAJ,EAA+B;AACpCO,MAAE,GAAG,SAAL;AACD,GAFM,MAEA,IAAI,QAAQE,IAAR,CAAaN,QAAb,CAAJ,EAA4B;AACjCI,MAAE,GAAG,OAAL;AACD;;AACD,SAAOA,EAAP;AACD;;AACM,SAASG,KAAT,GAAiB;AACtB,MAAI,OAAOT,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOF,KAAK,EAAZ;AACD;;AACD,SAAO,cAAP;AACF","names":["getOS","userAgent","window","navigator","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","useOs"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-os/use-os.ts"],"sourcesContent":["export type OS = 'undetermined' | 'macos' | 'ios' | 'windows' | 'android' | 'linux';\n\nfunction getOS() {\n  const { userAgent } = window.navigator;\n  const { platform } = window.navigator;\n  const macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n  const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n  const iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n  let os: OS = 'undetermined';\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'macos';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'ios';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'android';\n  } else if (/Linux/.test(platform)) {\n    os = 'linux';\n  }\n\n  return os;\n}\n\nexport function useOs(): OS {\n  if (typeof window !== 'undefined') {\n    return getOS();\n  }\n\n  return 'undetermined';\n}\n"]},"metadata":{},"sourceType":"module"}