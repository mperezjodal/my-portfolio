{"ast":null,"code":"import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.js';\n\nfunction useFocusReturn(_ref) {\n  var opened = _ref.opened,\n      transitionDuration = _ref.transitionDuration,\n      _ref$shouldReturnFocu = _ref.shouldReturnFocus,\n      shouldReturnFocus = _ref$shouldReturnFocu === void 0 ? true : _ref$shouldReturnFocu;\n  var lastActiveElement = useRef();\n\n  var returnFocus = function returnFocus() {\n    var _a;\n\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      (_a = lastActiveElement.current) == null ? void 0 : _a.focus();\n    }\n  };\n\n  useDidUpdate(function () {\n    var timeout = -1;\n\n    var clearFocusTimeout = function clearFocusTimeout(event) {\n      if (event.code === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, transitionDuration + 10);\n    }\n\n    return function () {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened]);\n  return returnFocus;\n}\n\nexport { useFocusReturn };","map":{"version":3,"mappings":";;;AAEO,SAASA,cAAT,OAIJ;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,kBAEC,QAFDA,kBAEC;AAAA,mCADDC,iBACC;AAAA,MADDA,iBACC,sCADmB,IACnB;AACD,MAAMC,iBAAiB,GAAGC,MAAM,EAAhC;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIC,EAAJ;;AACA,QAAIH,iBAAiB,CAACI,OAAlB,IAA6B,WAAWJ,iBAAiB,CAACI,OAA1D,IAAqE,OAAOJ,iBAAiB,CAACI,OAAlB,CAA0BC,KAAjC,KAA2C,UAApH,EAAgI;AAC9H,OAACF,EAAE,GAAGH,iBAAiB,CAACI,OAAxB,KAAoC,IAApC,GAA2C,KAAK,CAAhD,GAAoDD,EAAE,CAACE,KAAH,EAApD;AACD;AACF,GALD;;AAMAC,cAAY,CAAC,YAAM;AACjB,QAAIC,OAAO,GAAG,CAAC,CAAf;;AACA,QAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,UAAIA,KAAK,CAACC,IAAN,KAAe,KAAnB,EAA0B;AACxBC,cAAM,CAACC,YAAP,CAAoBL,OAApB;AACD;AACF,KAJD;;AAKAM,YAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCN,iBAArC;;AACA,QAAIX,MAAJ,EAAY;AACVG,uBAAiB,CAACI,OAAlB,GAA4BS,QAAQ,CAACE,aAArC;AACD,KAFD,MAEO,IAAIhB,iBAAJ,EAAuB;AAC5BQ,aAAO,GAAGI,MAAM,CAACK,UAAP,CAAkBd,WAAlB,EAA+BJ,kBAAkB,GAAG,EAApD,CAAV;AACD;;AACD,WAAO,YAAM;AACXa,YAAM,CAACC,YAAP,CAAoBL,OAApB;AACAM,cAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwCT,iBAAxC;AACD,KAHD;AAID,GAjBW,EAiBT,CAACX,MAAD,CAjBS,CAAZ;AAkBA,SAAOK,WAAP;AACF","names":["useFocusReturn","opened","transitionDuration","shouldReturnFocus","lastActiveElement","useRef","returnFocus","_a","current","focus","useDidUpdate","timeout","clearFocusTimeout","event","code","window","clearTimeout","document","addEventListener","activeElement","setTimeout","removeEventListener"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-focus-return/use-focus-return.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\ninterface UseFocusReturn {\n  opened: boolean;\n  transitionDuration: number;\n  shouldReturnFocus?: boolean;\n}\n\n/** Returns focus to last active element, used in Modal and Drawer */\nexport function useFocusReturn({\n  opened,\n  transitionDuration,\n  shouldReturnFocus = true,\n}: UseFocusReturn) {\n  const lastActiveElement = useRef<HTMLElement>();\n  const returnFocus = () => {\n    if (\n      lastActiveElement.current &&\n      'focus' in lastActiveElement.current &&\n      typeof lastActiveElement.current.focus === 'function'\n    ) {\n      lastActiveElement.current?.focus();\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.code === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement as HTMLElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, transitionDuration + 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened]);\n\n  return returnFocus;\n}\n"]},"metadata":{},"sourceType":"module"}