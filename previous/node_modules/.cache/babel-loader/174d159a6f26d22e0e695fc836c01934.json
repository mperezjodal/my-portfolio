{"ast":null,"code":"import _slicedToArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport clsx from 'clsx';\nimport { serializeStyles } from '@emotion/serialize';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useGuaranteedMemo } from './utils/use-guaranteed-memo/use-guaranteed-memo.js';\nimport { useEmotionCache } from './use-emotion-cache.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar refPropertyName = \"ref\";\n\nfunction getRef(args) {\n  var ref;\n\n  if (args.length !== 1) {\n    return {\n      args: args,\n      ref: ref\n    };\n  }\n\n  var _args = _slicedToArray(args, 1),\n      arg = _args[0];\n\n  if (!(arg instanceof Object)) {\n    return {\n      args: args,\n      ref: ref\n    };\n  }\n\n  if (!(refPropertyName in arg)) {\n    return {\n      args: args,\n      ref: ref\n    };\n  }\n\n  ref = arg[refPropertyName];\n\n  var argCopy = __spreadValues({}, arg);\n\n  delete argCopy[refPropertyName];\n  return {\n    args: [argCopy],\n    ref: ref\n  };\n}\n\nvar _ref = function () {\n  function merge(registered, css, className) {\n    var registeredStyles = [];\n    var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles);\n  }\n\n  function _cssFactory(params) {\n    var cache = params.cache;\n\n    var css = function css() {\n      for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n        styles[_key] = arguments[_key];\n      }\n\n      var _getRef = getRef(styles),\n          ref = _getRef.ref,\n          args = _getRef.args;\n\n      var serialized = serializeStyles(args, cache.registered);\n      insertStyles(cache, serialized, false);\n      return \"\".concat(cache.key, \"-\").concat(serialized.name).concat(ref === void 0 ? \"\" : \" \".concat(ref));\n    };\n\n    var cx = function cx() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(cache.registered, css, clsx(args));\n    };\n\n    return {\n      css: css,\n      cx: cx\n    };\n  }\n\n  return {\n    cssFactory: _cssFactory\n  };\n}(),\n    cssFactory = _ref.cssFactory;\n\nfunction useCss() {\n  var cache = useEmotionCache();\n  return useGuaranteedMemo(function () {\n    return cssFactory({\n      cache: cache\n    });\n  }, [cache]);\n}\n\nexport { cssFactory, useCss };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","refPropertyName","getRef","args","ref","length","arg","argCopy","merge","registered","css","className","registeredStyles","rawClassName","getRegisteredStyles","_cssFactory","params","cache","styles","serialized","serializeStyles","insertStyles","name","cx","clsx","cssFactory","useCss","useEmotionCache","useGuaranteedMemo"],"sources":["/Users/marceloperez/node_modules/@mantine/styles/src/tss/use-css.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { serializeStyles, RegisteredCache } from '@emotion/serialize';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport type { EmotionCache } from '@emotion/cache';\nimport { useGuaranteedMemo } from './utils/use-guaranteed-memo/use-guaranteed-memo';\nimport type { CSS } from './types';\nimport { useEmotionCache } from './use-emotion-cache';\n\nconst refPropertyName = 'ref' as const;\n\nfunction getRef(args: any[]) {\n  let ref: string;\n\n  if (args.length !== 1) {\n    return { args, ref };\n  }\n\n  const [arg] = args;\n\n  if (!(arg instanceof Object)) {\n    return { args, ref };\n  }\n\n  if (!(refPropertyName in arg)) {\n    return { args, ref };\n  }\n\n  ref = arg[refPropertyName];\n  const argCopy = { ...arg };\n  delete argCopy[refPropertyName];\n  return { args: [argCopy], ref };\n}\n\nexport const { cssFactory } = (() => {\n  function merge(registered: RegisteredCache, css: CSS, className: string) {\n    const registeredStyles: string[] = [];\n\n    const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles);\n  }\n\n  function _cssFactory(params: { cache: EmotionCache }) {\n    const { cache } = params;\n\n    const css: CSS = (...styles: any) => {\n      const { ref, args } = getRef(styles);\n      const serialized = serializeStyles(args, cache.registered);\n      insertStyles(cache as any, serialized, false);\n      return `${cache.key}-${serialized.name}${ref === undefined ? '' : ` ${ref}`}`;\n    };\n\n    const cx = (...args: any) => merge(cache.registered, css, clsx(args));\n\n    return { css, cx };\n  }\n\n  return { cssFactory: _cssFactory };\n})();\n\nexport function useCss() {\n  const cache = useEmotionCache();\n  return useGuaranteedMemo(() => cssFactory({ cache }), [cache]);\n}\n"]},"metadata":{},"sourceType":"module"}