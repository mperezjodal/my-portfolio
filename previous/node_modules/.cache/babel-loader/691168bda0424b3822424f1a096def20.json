{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    spacing,\n    breakpoints,\n    cols\n  } = _ref;\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = \"maxWidth\" in breakpoint ? \"max-width\" : \"min-width\";\n    const breakpointSize = theme.fn.size({\n      size: property === \"max-width\" ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints\n    });\n    acc[`@media (${property}: ${breakpointSize + (property === \"max-width\" ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing\n      })\n    };\n    return acc;\n  }, {});\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: spacing,\n        sizes: theme.spacing\n      })\n    }, gridBreakpoints)\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":";;AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;AACA,IAAIC,mBAAmB,GAAGF,MAAM,CAACG,qBAAjC;AACA,IAAIC,YAAY,GAAGJ,MAAM,CAACK,SAAP,CAAiBC,cAApC;AACA,IAAIC,YAAY,GAAGP,MAAM,CAACK,SAAP,CAAiBG,oBAApC;;AACA,IAAIC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBD,GAAG,IAAID,GAAP,GAAaX,SAAS,CAACW,GAAD,EAAMC,GAAN,EAAW;AAAEE,YAAU,EAAE,IAAd;AAAoBC,cAAY,EAAE,IAAlC;AAAwCC,UAAQ,EAAE,IAAlD;AAAwDH;AAAxD,CAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAA1J;;AACA,IAAII,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7B,OAAK,IAAIC,IAAT,IAAiBD,CAAC,KAAKA,CAAC,GAAG,EAAT,CAAlB,EACE,IAAId,YAAY,CAACgB,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;;AACJ,MAAIjB,mBAAJ,EACE,KAAK,IAAIiB,IAAT,IAAiBjB,mBAAmB,CAACgB,CAAD,CAApC,EAAyC;AACvC,QAAIX,YAAY,CAACa,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;AACH;AACH,SAAOF,CAAP;AACD,CAVD;;AAaA,gBAAeI,YAAY,CAAC,CAACC,KAAD,WAA2C;AAAA,MAAnC;AAAEC,WAAF;AAAWC,eAAX;AAAwBC;AAAxB,GAAmC;AACrE,QAAMC,eAAe,GAAGC,oBAAoB,CAACL,KAAD,EAAQE,WAAR,CAApB,CAAyCI,MAAzC,CAAgD,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC3F,UAAMC,QAAQ,GAAG,cAAcD,UAAd,GAA2B,WAA3B,GAAyC,WAA1D;AACA,UAAME,cAAc,GAAGV,KAAK,CAACW,EAAN,CAASC,IAAT,CAAc;AACnCA,UAAI,EAAEH,QAAQ,KAAK,WAAb,GAA2BD,UAAU,CAACK,QAAtC,GAAiDL,UAAU,CAACM,QAD/B;AAEnCC,WAAK,EAAEf,KAAK,CAACE;AAFsB,KAAd,CAAvB;AAIAK,OAAG,CAAE,WAAUE,QAAS,KAAIC,cAAc,IAAID,QAAQ,KAAK,WAAb,GAA2B,CAA3B,GAA+B,CAAnC,CAAsC,KAA7E,CAAH,GAAwF;AACtFO,yBAAmB,EAAG,UAASR,UAAU,CAACL,IAAK,mBADuC;AAEtFc,SAAG,EAAEjB,KAAK,CAACW,EAAN,CAASC,IAAT,CAAc;AACjBA,YAAI,EAAEJ,UAAU,CAACP,OAAX,IAAsBA,OADX;AAEjBc,aAAK,EAAEf,KAAK,CAACC;AAFI,OAAd;AAFiF,KAAxF;AAOA,WAAOM,GAAP;AACD,GAduB,EAcrB,EAdqB,CAAxB;AAeA,SAAO;AACLW,QAAI,EAAExB,cAAc,CAAC;AACnByB,eAAS,EAAE,YADQ;AAEnBC,aAAO,EAAE,MAFU;AAGnBJ,yBAAmB,EAAG,UAASb,IAAK,mBAHjB;AAInBc,SAAG,EAAEjB,KAAK,CAACW,EAAN,CAASC,IAAT,CAAc;AAAEA,YAAI,EAAEX,OAAR;AAAiBc,aAAK,EAAEf,KAAK,CAACC;AAA9B,OAAd;AAJc,KAAD,EAKjBG,eALiB;AADf,GAAP;AAQD,CAxB0B,CAA3B","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","createStyles","theme","spacing","breakpoints","cols","gridBreakpoints","getSortedBreakpoints","reduce","acc","breakpoint","property","breakpointSize","fn","size","maxWidth","minWidth","sizes","gridTemplateColumns","gap","root","boxSizing","display"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/SimpleGrid/SimpleGrid.styles.ts"],"sourcesContent":["import { createStyles, MantineNumberSize } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth?: MantineNumberSize;\n  minWidth?: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n}\n\nexport interface SimpleGridStylesParams {\n  spacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles((theme, { spacing, breakpoints, cols }: SimpleGridStylesParams) => {\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = 'maxWidth' in breakpoint ? 'max-width' : 'min-width';\n    const breakpointSize = theme.fn.size({\n      size: property === 'max-width' ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints,\n    });\n\n    acc[`@media (${property}: ${breakpointSize + (property === 'max-width' ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing,\n      }),\n    };\n\n    return acc;\n  }, {});\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({ size: spacing, sizes: theme.spacing }),\n      ...gridBreakpoints,\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}