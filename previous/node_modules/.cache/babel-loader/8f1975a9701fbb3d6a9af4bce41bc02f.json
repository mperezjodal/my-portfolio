{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\n\nfunction getCurves(_ref) {\n  var size = _ref.size,\n      thickness = _ref.thickness,\n      sections = _ref.sections,\n      renderRoundedLineCaps = _ref.renderRoundedLineCaps;\n  var sum = sections.reduce(function (acc, current) {\n    return acc + current.value;\n  }, 0);\n  var accumulated = Math.PI * ((size * 0.9 - thickness * 2) / 2) * 2;\n  var offset = accumulated;\n  var curves = [];\n  var curvesInOrder = [];\n\n  for (var i = 0; i < sections.length; i += 1) {\n    curves.push({\n      sum: sum,\n      offset: offset,\n      data: sections[i],\n      root: false\n    });\n    offset -= sections[i].value / 100 * accumulated;\n  }\n\n  curves.push({\n    sum: sum,\n    offset: offset,\n    data: null,\n    root: true\n  });\n  curvesInOrder.push(__spreadProps(__spreadValues({}, curves[curves.length - 1]), {\n    lineRoundCaps: false\n  }));\n\n  if (curves.length > 2) {\n    curvesInOrder.push(__spreadProps(__spreadValues({}, curves[0]), {\n      lineRoundCaps: renderRoundedLineCaps\n    }));\n    curvesInOrder.push(__spreadProps(__spreadValues({}, curves[curves.length - 2]), {\n      lineRoundCaps: renderRoundedLineCaps\n    }));\n\n    for (var _i = 1; _i <= curves.length - 3; _i += 1) {\n      curvesInOrder.push(__spreadProps(__spreadValues({}, curves[_i]), {\n        lineRoundCaps: false\n      }));\n    }\n  } else {\n    curvesInOrder.push(__spreadProps(__spreadValues({}, curves[0]), {\n      lineRoundCaps: renderRoundedLineCaps\n    }));\n  }\n\n  return curvesInOrder;\n}\n\nexport { getCurves };","map":{"version":3,"mappings":";AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;AACA,IAAIC,UAAU,GAAGF,MAAM,CAACG,gBAAxB;AACA,IAAIC,iBAAiB,GAAGJ,MAAM,CAACK,yBAA/B;AACA,IAAIC,mBAAmB,GAAGN,MAAM,CAACO,qBAAjC;AACA,IAAIC,YAAY,GAAGR,MAAM,CAACS,SAAP,CAAiBC,cAApC;AACA,IAAIC,YAAY,GAAGX,MAAM,CAACS,SAAP,CAAiBG,oBAApC;;AACA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX;AAAA,SAAqBD,GAAG,IAAID,GAAP,GAAaf,SAAS,CAACe,GAAD,EAAMC,GAAN,EAAW;AAAEE,cAAU,EAAE,IAAd;AAAoBC,gBAAY,EAAE,IAAlC;AAAwCC,YAAQ,EAAE,IAAlD;AAAwDH,SAAK,EAALA;AAAxD,GAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAApI;AAAA,CAAtB;;AACA,IAAII,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7B,OAAK,IAAIC,IAAT,IAAiBD,CAAC,KAAKA,CAAC,GAAG,EAAT,CAAlB;AACE,QAAId,YAAY,CAACgB,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;AAFJ;;AAGA,MAAIjB,mBAAJ;AAAA,+CACmBA,mBAAmB,CAACgB,CAAD,CADtC;AAAA;;AAAA;AACE,0DAAyC;AAAA,YAAhCC,IAAgC;AACvC,YAAIZ,YAAY,CAACa,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;AACH;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAOF,CAAP;AACD,CAVD;;AAWA,IAAII,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,CAAD,EAAIC,CAAJ;AAAA,SAAUpB,UAAU,CAACmB,CAAD,EAAIjB,iBAAiB,CAACkB,CAAD,CAArB,CAApB;AAAA,CAApB;;AACO,SAASI,SAAT,OAAyE;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,SAA8C,QAA9CA,SAA8C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,qBAAyB,QAAzBA,qBAAyB;AAC9E,MAAMC,GAAG,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAACC,GAAD,EAAMC,OAAN;AAAA,WAAkBD,GAAG,GAAGC,OAAO,CAAClB,KAAhC;AAAA,GAAhB,EAAuD,CAAvD,CAAZ;AACA,MAAMmB,WAAW,GAAGC,IAAI,CAACC,EAAL,IAAW,CAACV,IAAI,GAAG,GAAP,GAAaC,SAAS,GAAG,CAA1B,IAA+B,CAA1C,IAA+C,CAAnE;AACA,MAAIU,MAAM,GAAGH,WAAb;AACA,MAAMI,MAAM,GAAG,EAAf;AACA,MAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACa,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;AAC3CF,UAAM,CAACI,IAAP,CAAY;AAAEZ,SAAG,EAAHA,GAAF;AAAOO,YAAM,EAANA,MAAP;AAAeM,UAAI,EAAEf,QAAQ,CAACY,CAAD,CAA7B;AAAkCI,UAAI,EAAE;AAAxC,KAAZ;AACAP,UAAM,IAAIT,QAAQ,CAACY,CAAD,CAAR,CAAYzB,KAAZ,GAAoB,GAApB,GAA0BmB,WAApC;AACD;;AACDI,QAAM,CAACI,IAAP,CAAY;AAAEZ,OAAG,EAAHA,GAAF;AAAOO,UAAM,EAANA,MAAP;AAAeM,QAAI,EAAE,IAArB;AAA2BC,QAAI,EAAE;AAAjC,GAAZ;AACAL,eAAa,CAACG,IAAd,CAAmBlB,aAAa,CAACL,cAAc,CAAC,EAAD,EAAKmB,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAAX,CAAf,EAAgD;AAAEI,iBAAa,EAAE;AAAjB,GAAhD,CAAhC;;AACA,MAAIP,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACrBF,iBAAa,CAACG,IAAd,CAAmBlB,aAAa,CAACL,cAAc,CAAC,EAAD,EAAKmB,MAAM,CAAC,CAAD,CAAX,CAAf,EAAgC;AAAEO,mBAAa,EAAEhB;AAAjB,KAAhC,CAAhC;AACAU,iBAAa,CAACG,IAAd,CAAmBlB,aAAa,CAACL,cAAc,CAAC,EAAD,EAAKmB,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAAX,CAAf,EAAgD;AAAEI,mBAAa,EAAEhB;AAAjB,KAAhD,CAAhC;;AACA,SAAK,IAAIW,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAIF,MAAM,CAACG,MAAP,GAAgB,CAArC,EAAwCD,EAAC,IAAI,CAA7C,EAAgD;AAC9CD,mBAAa,CAACG,IAAd,CAAmBlB,aAAa,CAACL,cAAc,CAAC,EAAD,EAAKmB,MAAM,CAACE,EAAD,CAAX,CAAf,EAAgC;AAAEK,qBAAa,EAAE;AAAjB,OAAhC,CAAhC;AACD;AACF,GAND,MAMO;AACLN,iBAAa,CAACG,IAAd,CAAmBlB,aAAa,CAACL,cAAc,CAAC,EAAD,EAAKmB,MAAM,CAAC,CAAD,CAAX,CAAf,EAAgC;AAAEO,mBAAa,EAAEhB;AAAjB,KAAhC,CAAhC;AACD;;AACD,SAAOU,aAAP;AACF","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","getCurves","size","thickness","sections","renderRoundedLineCaps","sum","reduce","acc","current","accumulated","Math","PI","offset","curves","curvesInOrder","i","length","push","data","root","lineRoundCaps"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/RingProgress/get-curves/get-curves.ts"],"sourcesContent":["import type { MantineColor } from '@mantine/styles';\n\ninterface CurveData {\n  value: number;\n  color: MantineColor;\n}\n\ninterface GetCurves {\n  sections: CurveData[];\n  size: number;\n  thickness: number;\n  renderRoundedLineCaps: boolean;\n}\n\ninterface Curve {\n  sum: number;\n  offset: number;\n  root: boolean;\n  data: CurveData;\n  lineRoundCaps?: boolean;\n}\n\nexport function getCurves({ size, thickness, sections, renderRoundedLineCaps }: GetCurves) {\n  const sum = sections.reduce((acc, current) => acc + current.value, 0);\n  const accumulated = Math.PI * ((size * 0.9 - thickness * 2) / 2) * 2;\n  let offset = accumulated;\n  const curves: Curve[] = [];\n  const curvesInOrder: Curve[] = [];\n\n  for (let i = 0; i < sections.length; i += 1) {\n    curves.push({ sum, offset, data: sections[i], root: false });\n    offset -= (sections[i].value / 100) * accumulated;\n  }\n\n  curves.push({ sum, offset, data: null, root: true });\n\n  // Reorder curves to layer appropriately and selectively set caps to round\n\n  curvesInOrder.push({ ...curves[curves.length - 1], lineRoundCaps: false });\n  if (curves.length > 2) {\n    curvesInOrder.push({ ...curves[0], lineRoundCaps: renderRoundedLineCaps });\n    curvesInOrder.push({ ...curves[curves.length - 2], lineRoundCaps: renderRoundedLineCaps });\n    for (let i = 1; i <= curves.length - 3; i += 1) {\n      curvesInOrder.push({ ...curves[i], lineRoundCaps: false });\n    }\n  } else {\n    curvesInOrder.push({ ...curves[0], lineRoundCaps: renderRoundedLineCaps });\n  }\n\n  return curvesInOrder;\n}\n"]},"metadata":{},"sourceType":"module"}