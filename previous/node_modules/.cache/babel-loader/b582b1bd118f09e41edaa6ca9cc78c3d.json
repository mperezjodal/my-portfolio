{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useReducedMotion, useUncontrolled, useUuid, useResizeObserver, useMergedRef } from '@mantine/hooks';\nimport { useMantineDefaultProps } from '@mantine/styles';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  disabled: false,\n  size: \"sm\",\n  transitionDuration: 200\n};\nconst SegmentedControl = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"SegmentedControl\", defaultProps, props),\n        {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation\n  } = _a,\n        others = __objRest(_a, [\"className\", \"disabled\", \"data\", \"name\", \"value\", \"onChange\", \"color\", \"fullWidth\", \"radius\", \"size\", \"transitionDuration\", \"transitionTimingFunction\", \"classNames\", \"styles\", \"defaultValue\", \"orientation\"]);\n\n  const reduceMotion = useReducedMotion();\n\n  const data = _data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? data[0].value : null,\n    onChange,\n    rule: val => !!val\n  });\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    fullWidth,\n    color,\n    radius,\n    shouldAnimate: reduceMotion || !shouldAnimate,\n    transitionDuration,\n    transitionTimingFunction,\n    orientation\n  }, {\n    classNames,\n    styles,\n    name: \"SegmentedControl\"\n  });\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0]\n  });\n  const uuid = useUuid(name);\n  const refs = useRef({});\n  const [observerRef, containerRect] = useResizeObserver();\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n      const offsetRight = containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n      setActivePosition({\n        width,\n        height,\n        translate: [theme.dir === \"rtl\" ? offsetRight : offsetLeft, element.parentElement.offsetTop - WRAPPER_PADDING]\n      });\n    }\n  }, [_value, containerRect]);\n  useEffect(() => {\n    setShouldAnimate(true);\n  }, []);\n  const controls = data.map(item => /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.control, {\n      [classes.controlActive]: _value === item.value\n    }),\n    key: item.value\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: classes.input,\n    disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => handleValueChange(item.value)\n  }), /* @__PURE__ */React.createElement(\"label\", {\n    className: cx(classes.label, {\n      [classes.labelActive]: _value === item.value,\n      [classes.disabled]: disabled\n    }),\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => {\n      refs.current[item.value] = node;\n    }\n  }, item.label)));\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref: useMergedRef(observerRef, ref)\n  }, others), !!_value && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    className: classes.active,\n    sx: {\n      width: activePosition.width,\n      height: activePosition.height,\n      transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`\n    }\n  }), controls);\n});\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","disabled","size","transitionDuration","SegmentedControl","forwardRef","props","ref","_a","useMantineDefaultProps","className","data","_data","name","onChange","color","fullWidth","radius","transitionTimingFunction","classNames","styles","defaultValue","orientation","others","reduceMotion","useReducedMotion","map","item","label","shouldAnimate","setShouldAnimate","useState","_value","handleValueChange","useUncontrolled","finalValue","Array","isArray","rule","val","classes","cx","theme","useStyles","activePosition","setActivePosition","width","height","translate","uuid","useUuid","refs","useRef","observerRef","containerRect","useResizeObserver","useEffect","current","element","elementRect","getBoundingClientRect","scaledValue","offsetWidth","offsetRight","parentElement","offsetLeft","WRAPPER_PADDING","dir","offsetTop","controls","React","createElement","control","controlActive","input","type","id","checked","labelActive","htmlFor","node","Box","root","useMergedRef","component","active","sx","transform","displayName"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport {\n  useReducedMotion,\n  useResizeObserver,\n  useUncontrolled,\n  useUuid,\n  useMergedRef,\n} from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  ClassNames,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles';\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n}\n\nexport type SegmentedControlStylesNames = ClassNames<typeof useStyles>;\n\nexport interface SegmentedControlProps\n  extends DefaultProps<SegmentedControlStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: string[] | SegmentedControlItem[];\n\n  /** Current selected value */\n  value?: string;\n\n  /** Disabled input state */\n  disabled?: boolean;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Name of the radio group, default to random id */\n  name?: string;\n\n  /** True if component should have 100% width */\n  fullWidth?: boolean;\n\n  /** Active control color from theme.colors, defaults to white in light color scheme and theme.colors.dark[9] in dark */\n  color?: MantineColor;\n\n  /** Controls font-size, paddings and height */\n  size?: MantineSize;\n\n  /** Border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Transition duration in ms, set to 0 to turn off transitions */\n  transitionDuration?: number;\n\n  /** Transition timing function for all transitions, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Display Vertically */\n  orientation?: 'vertical' | 'horizontal';\n}\n\nconst defaultProps: Partial<SegmentedControlProps> = {\n  disabled: false,\n  size: 'sm',\n  transitionDuration: 200,\n};\n\nexport const SegmentedControl = forwardRef<HTMLDivElement, SegmentedControlProps>((props, ref) => {\n  const {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation,\n    ...others\n  } = useMantineDefaultProps('SegmentedControl', defaultProps, props);\n\n  const reduceMotion = useReducedMotion();\n  const data = _data.map((item: any) =>\n    typeof item === 'string' ? { label: item, value: item } : item\n  );\n\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? data[0].value : null,\n    onChange,\n    rule: (val) => !!val,\n  });\n\n  const { classes, cx, theme } = useStyles(\n    {\n      size,\n      fullWidth,\n      color,\n      radius,\n      shouldAnimate: reduceMotion || !shouldAnimate,\n      transitionDuration,\n      transitionTimingFunction,\n      orientation,\n    },\n    { classNames, styles, name: 'SegmentedControl' }\n  );\n\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0],\n  });\n  const uuid = useUuid(name);\n  const refs = useRef<Record<string, HTMLLabelElement>>({});\n  const [observerRef, containerRect] = useResizeObserver();\n\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n\n      const offsetRight =\n        containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n\n      setActivePosition({\n        width,\n        height,\n        translate: [\n          theme.dir === 'rtl' ? offsetRight : offsetLeft,\n          element.parentElement.offsetTop - WRAPPER_PADDING,\n        ],\n      });\n    }\n  }, [_value, containerRect]);\n\n  useEffect(() => {\n    setShouldAnimate(true);\n  }, []);\n\n  const controls = data.map((item) => (\n    <div\n      className={cx(classes.control, { [classes.controlActive]: _value === item.value })}\n      key={item.value}\n    >\n      <input\n        className={classes.input}\n        disabled={disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => handleValueChange(item.value)}\n      />\n\n      <label\n        className={cx(classes.label, {\n          [classes.labelActive]: _value === item.value,\n          [classes.disabled]: disabled,\n        })}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => {\n          refs.current[item.value] = node;\n        }}\n      >\n        {item.label}\n      </label>\n    </div>\n  ));\n\n  return (\n    <Box className={cx(classes.root, className)} ref={useMergedRef(observerRef, ref)} {...others}>\n      {!!_value && (\n        <Box\n          component=\"span\"\n          className={classes.active}\n          sx={{\n            width: activePosition.width,\n            height: activePosition.height,\n            transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`,\n          }}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"]},"metadata":{},"sourceType":"module"}