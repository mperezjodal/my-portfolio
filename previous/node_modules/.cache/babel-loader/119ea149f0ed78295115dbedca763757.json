{"ast":null,"code":"var getRelativePosition = function getRelativePosition(_ref) {\n  var axis = _ref.axis,\n      target = _ref.target,\n      parent = _ref.parent,\n      alignment = _ref.alignment,\n      offset = _ref.offset,\n      isList = _ref.isList;\n\n  if (!target || !parent && typeof document === \"undefined\") {\n    return 0;\n  }\n\n  var isCustomParent = !!parent;\n  var parentElement = parent || document.body;\n  var parentPosition = parentElement.getBoundingClientRect();\n  var targetPosition = target.getBoundingClientRect();\n\n  var getDiff = function getDiff(property) {\n    return targetPosition[property] - parentPosition[property];\n  };\n\n  if (axis === \"y\") {\n    var diff = getDiff(\"top\");\n    if (diff === 0) return 0;\n\n    if (alignment === \"start\") {\n      var distance = diff - offset;\n      var shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n\n    var parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n\n    if (alignment === \"end\") {\n      var _distance = diff + offset - parentHeight + targetPosition.height;\n\n      var _shouldScroll = _distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return _shouldScroll ? _distance : 0;\n    }\n\n    if (alignment === \"center\") {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n\n    return 0;\n  }\n\n  if (axis === \"x\") {\n    var _diff = getDiff(\"left\");\n\n    if (_diff === 0) return 0;\n\n    if (alignment === \"start\") {\n      var _distance2 = _diff - offset;\n\n      var _shouldScroll2 = _distance2 <= targetPosition.width || !isList;\n\n      return _shouldScroll2 ? _distance2 : 0;\n    }\n\n    var parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n\n    if (alignment === \"end\") {\n      var _distance3 = _diff + offset - parentWidth + targetPosition.width;\n\n      var _shouldScroll3 = _distance3 >= -targetPosition.width || !isList;\n\n      return _shouldScroll3 ? _distance3 : 0;\n    }\n\n    if (alignment === \"center\") {\n      return _diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n\nexport { getRelativePosition };","map":{"version":3,"mappings":"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","names":["getRelativePosition","axis","target","parent","alignment","offset","isList","document","isCustomParent","parentElement","body","parentPosition","getBoundingClientRect","targetPosition","getDiff","property","diff","distance","shouldScroll","height","parentHeight","window","innerHeight","width","parentWidth","innerWidth"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-scroll-into-view/utils/get-relative-position.ts"],"sourcesContent":["export const getRelativePosition = ({\n  axis,\n  target,\n  parent,\n  alignment,\n  offset,\n  isList,\n}): number => {\n  if (!target || (!parent && typeof document === 'undefined')) {\n    return 0;\n  }\n  const isCustomParent = !!parent;\n  const parentElement = parent || document.body;\n  const parentPosition = parentElement.getBoundingClientRect();\n  const targetPosition = target.getBoundingClientRect();\n\n  const getDiff = (property: 'top' | 'left'): number =>\n    targetPosition[property] - parentPosition[property];\n\n  if (axis === 'y') {\n    const diff = getDiff('top');\n\n    if (diff === 0) return 0;\n\n    if (alignment === 'start') {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n\n    if (alignment === 'end') {\n      const distance = diff + offset - parentHeight + targetPosition.height;\n      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === 'center') {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n\n    return 0;\n  }\n\n  if (axis === 'x') {\n    const diff = getDiff('left');\n\n    if (diff === 0) return 0;\n\n    if (alignment === 'start') {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.width || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n\n    if (alignment === 'end') {\n      const distance = diff + offset - parentWidth + targetPosition.width;\n      const shouldScroll = distance >= -targetPosition.width || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === 'center') {\n      return diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}