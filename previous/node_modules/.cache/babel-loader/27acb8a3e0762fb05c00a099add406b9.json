{"ast":null,"code":"import _slicedToArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useRef, useState, useEffect } from 'react';\nimport { clamp } from '../utils/clamp/clamp.js';\n\nvar clampUseMovePosition = function clampUseMovePosition(position) {\n  return {\n    x: clamp({\n      min: 0,\n      max: 1,\n      value: position.x\n    }),\n    y: clamp({\n      min: 0,\n      max: 1,\n      value: position.y\n    })\n  };\n};\n\nfunction useMove(onChange, handlers) {\n  var dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"ltr\";\n  var ref = useRef();\n  var mounted = useRef(false);\n  var isSliding = useRef(false);\n  var frame = useRef(0);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  useEffect(function () {\n    mounted.current = true;\n  }, []);\n  useEffect(function () {\n    var onScrub = function onScrub(_ref) {\n      var x = _ref.x,\n          y = _ref.y;\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(function () {\n        if (mounted.current && ref.current) {\n          ref.current.style.userSelect = \"none\";\n          var rect = ref.current.getBoundingClientRect();\n\n          if (rect.width && rect.height) {\n            var _x = clamp({\n              value: (x - rect.left) / rect.width,\n              min: 0,\n              max: 1\n            });\n\n            onChange({\n              x: dir === \"ltr\" ? _x : 1 - _x,\n              y: clamp({\n                value: (y - rect.top) / rect.height,\n                min: 0,\n                max: 1\n              })\n            });\n          }\n        }\n      });\n    };\n\n    var bindEvents = function bindEvents() {\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", stopScrubbing);\n      document.addEventListener(\"touchmove\", onTouchMove);\n      document.addEventListener(\"touchend\", stopScrubbing);\n    };\n\n    var unbindEvents = function unbindEvents() {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", stopScrubbing);\n      document.removeEventListener(\"touchmove\", onTouchMove);\n      document.removeEventListener(\"touchend\", stopScrubbing);\n    };\n\n    var startScrubbing = function startScrubbing() {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof (handlers == null ? void 0 : handlers.onScrubStart) === \"function\" && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n\n    var stopScrubbing = function stopScrubbing() {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        typeof (handlers == null ? void 0 : handlers.onScrubEnd) === \"function\" && handlers.onScrubEnd();\n        setActive(false);\n        unbindEvents();\n      }\n    };\n\n    var onMouseDown = function onMouseDown(event) {\n      startScrubbing();\n      onMouseMove(event);\n    };\n\n    var onMouseMove = function onMouseMove(event) {\n      return onScrub({\n        x: event.clientX,\n        y: event.clientY\n      });\n    };\n\n    var onTouchStart = function onTouchStart(event) {\n      startScrubbing();\n      event == null ? void 0 : event.preventDefault();\n      onTouchMove(event);\n    };\n\n    var onTouchMove = function onTouchMove(event) {\n      event == null ? void 0 : event.preventDefault();\n      onScrub({\n        x: event.changedTouches[0].clientX,\n        y: event.changedTouches[0].clientY\n      });\n    };\n\n    ref.current.addEventListener(\"mousedown\", onMouseDown);\n    ref.current.addEventListener(\"touchstart\", onTouchStart);\n    return function () {\n      if (ref.current) {\n        ref.current.removeEventListener(\"mousedown\", onMouseDown);\n        ref.current.removeEventListener(\"touchstart\", onTouchStart);\n      }\n    };\n  }, [ref.current, dir]);\n  return {\n    ref: ref,\n    active: active\n  };\n}\n\nexport { clampUseMovePosition, useMove };","map":{"version":3,"mappings":"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","names":["clampUseMovePosition","position","x","clamp","min","max","value","y","useMove","onChange","handlers","dir","ref","useRef","mounted","isSliding","frame","useState","active","setActive","useEffect","current","onScrub","cancelAnimationFrame","requestAnimationFrame","style","userSelect","rect","getBoundingClientRect","width","height","_x","left","top","bindEvents","document","addEventListener","onMouseMove","stopScrubbing","onTouchMove","unbindEvents","removeEventListener","startScrubbing","onScrubStart","onScrubEnd","onMouseDown","event","clientX","clientY","onTouchStart","preventDefault","changedTouches"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-move/use-move.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { useEffect, useState, useRef } from 'react';\nimport { clamp } from '../utils';\n\nexport interface UseMovePosition {\n  x: number;\n  y: number;\n}\n\nexport const clampUseMovePosition = (position: UseMovePosition) => ({\n  x: clamp({ min: 0, max: 1, value: position.x }),\n  y: clamp({ min: 0, max: 1, value: position.y }),\n});\n\ninterface useMoveHandlers {\n  onScrubStart?(): void;\n  onScrubEnd?(): void;\n}\n\nexport function useMove<T extends HTMLElement = HTMLDivElement>(\n  onChange: (value: UseMovePosition) => void,\n  handlers?: useMoveHandlers,\n  dir: 'ltr' | 'rtl' = 'ltr'\n) {\n  const ref = useRef<T>();\n  const mounted = useRef<boolean>(false);\n  const isSliding = useRef(false);\n  const frame = useRef(0);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  useEffect(() => {\n    const onScrub = ({ x, y }: UseMovePosition) => {\n      cancelAnimationFrame(frame.current);\n\n      frame.current = requestAnimationFrame(() => {\n        if (mounted.current && ref.current) {\n          ref.current.style.userSelect = 'none';\n          const rect = ref.current.getBoundingClientRect();\n\n          if (rect.width && rect.height) {\n            const _x = clamp({ value: (x - rect.left) / rect.width, min: 0, max: 1 });\n            onChange({\n              x: dir === 'ltr' ? _x : 1 - _x,\n              y: clamp({ value: (y - rect.top) / rect.height, min: 0, max: 1 }),\n            });\n          }\n        }\n      });\n    };\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', stopScrubbing);\n      document.addEventListener('touchmove', onTouchMove);\n      document.addEventListener('touchend', stopScrubbing);\n    };\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', stopScrubbing);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', stopScrubbing);\n    };\n\n    const startScrubbing = () => {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof handlers?.onScrubStart === 'function' && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n\n    const stopScrubbing = () => {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        typeof handlers?.onScrubEnd === 'function' && handlers.onScrubEnd();\n        setActive(false);\n        unbindEvents();\n      }\n    };\n\n    const onMouseDown = (event: MouseEvent) => {\n      startScrubbing();\n      onMouseMove(event);\n    };\n\n    const onMouseMove = (event: MouseEvent) => onScrub({ x: event.clientX, y: event.clientY });\n\n    const onTouchStart = (event: TouchEvent) => {\n      startScrubbing();\n      event?.preventDefault();\n      onTouchMove(event);\n    };\n\n    const onTouchMove = (event: TouchEvent) => {\n      event?.preventDefault();\n      onScrub({ x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    ref.current.addEventListener('mousedown', onMouseDown);\n    ref.current.addEventListener('touchstart', onTouchStart);\n\n    return () => {\n      if (ref.current) {\n        ref.current.removeEventListener('mousedown', onMouseDown);\n        ref.current.removeEventListener('touchstart', onTouchStart);\n      }\n    };\n  }, [ref.current, dir]);\n\n  return { ref, active };\n}\n"]},"metadata":{},"sourceType":"module"}