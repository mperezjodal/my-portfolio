{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    fluid,\n    size,\n    sizes\n  } = _ref;\n  return {\n    root: {\n      maxWidth: fluid ? \"100%\" : theme.fn.size({\n        size,\n        sizes\n      }),\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":";AACA,gBAAeA,YAAY,CAAC,CAACC,KAAD;AAAA,MAAQ;AAAEC,SAAF;AAASC,QAAT;AAAeC;AAAf,GAAR;AAAA,SAAoC;AAC9DC,QAAI,EAAE;AACJC,cAAQ,EAAEJ,KAAK,GAAG,MAAH,GAAYD,KAAK,CAACM,EAAN,CAASJ,IAAT,CAAc;AAAEA,YAAF;AAAQC;AAAR,OAAd,CADvB;AAEJI,gBAAU,EAAE,MAFR;AAGJC,iBAAW,EAAE;AAHT;AADwD,GAApC;AAAA,CAAD,CAA3B","names":["createStyles","theme","fluid","size","sizes","root","maxWidth","fn","marginLeft","marginRight"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Container/Container.styles.ts"],"sourcesContent":["import { createStyles, MantineNumberSize, MantineSize } from '@mantine/styles';\n\nexport interface ContainerStylesParams {\n  fluid: boolean;\n  size: MantineNumberSize;\n  sizes: Record<MantineSize, number>;\n}\n\nexport default createStyles((theme, { fluid, size, sizes }: ContainerStylesParams) => ({\n  root: {\n    maxWidth: fluid ? '100%' : theme.fn.size({ size, sizes }),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}