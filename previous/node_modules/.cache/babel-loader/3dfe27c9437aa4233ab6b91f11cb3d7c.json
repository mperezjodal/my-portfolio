{"ast":null,"code":"import _slicedToArray from \"/Users/marceloperez/Documents/my-portfolio/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useRef, useEffect } from 'react';\n\nfunction attachMediaListener(query, callback) {\n  try {\n    query.addEventListener(\"change\", callback);\n    return function () {\n      return query.removeEventListener(\"change\", callback);\n    };\n  } catch (e) {\n    query.addListener(callback);\n    return function () {\n      return query.removeListener(callback);\n    };\n  }\n}\n\nfunction getInitialValue(query) {\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    return window.matchMedia(query).matches;\n  }\n\n  return false;\n}\n\nfunction useMediaQuery(query) {\n  var _useState = useState(getInitialValue(query)),\n      _useState2 = _slicedToArray(_useState, 2),\n      matches = _useState2[0],\n      setMatches = _useState2[1];\n\n  var queryRef = useRef();\n  useEffect(function () {\n    if (\"matchMedia\" in window) {\n      queryRef.current = window.matchMedia(query);\n      setMatches(queryRef.current.matches);\n      return attachMediaListener(queryRef.current, function (event) {\n        return setMatches(event.matches);\n      });\n    }\n  }, [query]);\n  return matches;\n}\n\nexport { useMediaQuery };","map":{"version":3,"mappings":";;;AACA,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8C;AAC5C,MAAI;AACFD,SAAK,CAACE,gBAAN,CAAuB,QAAvB,EAAiCD,QAAjC;AACA,WAAO;AAAA,aAAMD,KAAK,CAACG,mBAAN,CAA0B,QAA1B,EAAoCF,QAApC,CAAN;AAAA,KAAP;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACVJ,SAAK,CAACK,WAAN,CAAkBJ,QAAlB;AACA,WAAO;AAAA,aAAMD,KAAK,CAACM,cAAN,CAAqBL,QAArB,CAAN;AAAA,KAAP;AACD;AACF;;AACD,SAASM,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,MAAI,OAAOQ,MAAP,KAAkB,WAAlB,IAAiC,gBAAgBA,MAArD,EAA6D;AAC3D,WAAOA,MAAM,CAACC,UAAP,CAAkBT,KAAlB,EAAyBU,OAAhC;AACD;;AACD,SAAO,KAAP;AACD;;AACM,SAASC,aAAT,CAAuBX,KAAvB,EAA8B;AACnC,kBAA8BY,QAAQ,CAACL,eAAe,CAACP,KAAD,CAAhB,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBG,UAAhB;;AACA,MAAMC,QAAQ,GAAGC,MAAM,EAAvB;AACAC,WAAS,CAAC,YAAM;AACd,QAAI,gBAAgBR,MAApB,EAA4B;AAC1BM,cAAQ,CAACG,OAAT,GAAmBT,MAAM,CAACC,UAAP,CAAkBT,KAAlB,CAAnB;AACAa,gBAAU,CAACC,QAAQ,CAACG,OAAT,CAAiBP,OAAlB,CAAV;AACA,aAAOX,mBAAmB,CAACe,QAAQ,CAACG,OAAV,EAAmB,UAACC,KAAD;AAAA,eAAWL,UAAU,CAACK,KAAK,CAACR,OAAP,CAArB;AAAA,OAAnB,CAA1B;AACD;AACF,GANQ,EAMN,CAACV,KAAD,CANM,CAAT;AAOA,SAAOU,OAAP;AACF","names":["attachMediaListener","query","callback","addEventListener","removeEventListener","e","addListener","removeListener","getInitialValue","window","matchMedia","matches","useMediaQuery","useState","setMatches","queryRef","useRef","useEffect","current","event"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-media-query/use-media-query.ts"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\ntype MediaQueryCallback = (event: { matches: boolean; media: string }) => void;\n\n/**\n * Older versions of Safari (shipped withCatalina and before) do not support addEventListener on matchMedia\n * https://stackoverflow.com/questions/56466261/matchmedia-addlistener-marked-as-deprecated-addeventlistener-equivalent\n * */\nfunction attachMediaListener(query: MediaQueryList, callback: MediaQueryCallback) {\n  try {\n    query.addEventListener('change', callback);\n    return () => query.removeEventListener('change', callback);\n  } catch (e) {\n    query.addListener(callback);\n    return () => query.removeListener(callback);\n  }\n}\n\nfunction getInitialValue(query: string) {\n  if (typeof window !== 'undefined' && 'matchMedia' in window) {\n    return window.matchMedia(query).matches;\n  }\n  return false;\n}\n\nexport function useMediaQuery(query: string) {\n  const [matches, setMatches] = useState(getInitialValue(query));\n  const queryRef = useRef<MediaQueryList>();\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if ('matchMedia' in window) {\n      queryRef.current = window.matchMedia(query);\n      setMatches(queryRef.current.matches);\n      return attachMediaListener(queryRef.current, (event) => setMatches(event.matches));\n    }\n  }, [query]);\n\n  return matches;\n}\n"]},"metadata":{},"sourceType":"module"}