{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea.js';\nimport useStyles from './SelectDropdown.styles.js';\nimport { Popper } from '../../Popper/Popper.js';\nimport { Paper } from '../../Paper/Paper.js';\nvar SelectDropdown = forwardRef(function (_ref, ref) {\n  var mounted = _ref.mounted,\n      transition = _ref.transition,\n      transitionDuration = _ref.transitionDuration,\n      transitionTimingFunction = _ref.transitionTimingFunction,\n      uuid = _ref.uuid,\n      shadow = _ref.shadow,\n      maxDropdownHeight = _ref.maxDropdownHeight,\n      _ref$withinPortal = _ref.withinPortal,\n      withinPortal = _ref$withinPortal === void 0 ? true : _ref$withinPortal,\n      children = _ref.children,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      dropdownComponent = _ref.dropdownComponent,\n      referenceElement = _ref.referenceElement,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? \"column\" : _ref$direction,\n      onDirectionChange = _ref.onDirectionChange,\n      _ref$switchDirectionO = _ref.switchDirectionOnFlip,\n      switchDirectionOnFlip = _ref$switchDirectionO === void 0 ? false : _ref$switchDirectionO,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? getDefaultZIndex(\"popover\") : _ref$zIndex,\n      _ref$dropdownPosition = _ref.dropdownPosition,\n      dropdownPosition = _ref$dropdownPosition === void 0 ? \"flip\" : _ref$dropdownPosition,\n      __staticSelector = _ref.__staticSelector;\n\n  var _useStyles = useStyles({\n    native: dropdownComponent !== SelectScrollArea\n  }, {\n    classNames: classNames,\n    styles: styles,\n    name: __staticSelector\n  }),\n      classes = _useStyles.classes;\n\n  var previousPlacement = useRef(\"bottom\");\n  return /* @__PURE__ */React.createElement(Popper, {\n    referenceElement: referenceElement,\n    mounted: mounted,\n    transition: transition,\n    transitionDuration: transitionDuration,\n    exitTransitionDuration: 0,\n    transitionTimingFunction: transitionTimingFunction,\n    position: dropdownPosition === \"flip\" ? \"bottom\" : dropdownPosition,\n    withinPortal: withinPortal,\n    zIndex: zIndex,\n    modifiers: [{\n      name: \"preventOverflow\",\n      enabled: false\n    }, {\n      name: \"flip\",\n      enabled: dropdownPosition === \"flip\"\n    }, {\n      name: \"sameWidth\",\n      enabled: true,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n        state.styles.popper.width = \"\".concat(state.rects.reference.width, \"px\");\n      },\n      effect: function effect(_ref3) {\n        var state = _ref3.state;\n        state.elements.popper.style.width = \"\".concat(state.elements.reference.offsetWidth, \"px\");\n      }\n    }, {\n      name: \"directionControl\",\n      enabled: true,\n      phase: \"main\",\n      fn: function fn(_ref4) {\n        var state = _ref4.state;\n\n        if (previousPlacement.current !== state.placement) {\n          previousPlacement.current = state.placement;\n          var nextDirection = state.placement === \"top\" ? \"column-reverse\" : \"column\";\n\n          if (direction !== nextDirection && switchDirectionOnFlip) {\n            onDirectionChange && onDirectionChange(nextDirection);\n          }\n        }\n      }\n    }]\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      maxHeight: maxDropdownHeight,\n      display: \"flex\"\n    }\n  }, /* @__PURE__ */React.createElement(Paper, {\n    radius: \"sm\",\n    component: dropdownComponent || \"div\",\n    id: \"\".concat(uuid, \"-items\"),\n    \"aria-labelledby\": \"\".concat(uuid, \"-label\"),\n    role: \"listbox\",\n    className: classes.dropdown,\n    shadow: shadow,\n    ref: ref,\n    onMouseDown: function onMouseDown(event) {\n      return event.preventDefault();\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: direction,\n      width: \"100%\"\n    }\n  }, children))));\n});\nSelectDropdown.displayName = \"@mantine/core/SelectDropdown\";\nexport { SelectDropdown };","map":{"version":3,"mappings":"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","names":["SelectDropdown","forwardRef","ref","mounted","transition","transitionDuration","transitionTimingFunction","uuid","shadow","maxDropdownHeight","withinPortal","children","classNames","styles","dropdownComponent","referenceElement","direction","onDirectionChange","switchDirectionOnFlip","zIndex","getDefaultZIndex","dropdownPosition","__staticSelector","useStyles","native","SelectScrollArea","name","classes","previousPlacement","useRef","React","createElement","Popper","exitTransitionDuration","position","modifiers","enabled","phase","requires","fn","state","popper","width","rects","reference","effect","elements","style","offsetWidth","current","placement","nextDirection","maxHeight","display","Paper","radius","component","id","role","className","dropdown","onMouseDown","event","preventDefault","flexDirection","displayName"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Select/SelectDropdown/SelectDropdown.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport { DefaultProps, MantineShadow, ClassNames, getDefaultZIndex } from '@mantine/styles';\nimport type { Placement } from '@popperjs/core';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea';\nimport { MantineTransition } from '../../Transition';\nimport { Paper } from '../../Paper';\nimport useStyles from './SelectDropdown.styles';\nimport { Popper } from '../../Popper';\n\nexport type SelectDropdownStylesNames = ClassNames<typeof useStyles>;\n\ninterface SelectDropdownProps extends DefaultProps<SelectDropdownStylesNames> {\n  mounted: boolean;\n  transition: MantineTransition;\n  transitionDuration: number;\n  transitionTimingFunction: string;\n  uuid: string;\n  shadow: MantineShadow;\n  maxDropdownHeight?: number | string;\n  withinPortal?: boolean;\n  children: React.ReactNode;\n  __staticSelector: string;\n  dropdownComponent?: React.FC<any>;\n  referenceElement?: HTMLElement;\n  direction?: React.CSSProperties['flexDirection'];\n  onDirectionChange?: (direction: React.CSSProperties['flexDirection']) => void;\n  switchDirectionOnFlip?: boolean;\n  zIndex?: number;\n  dropdownPosition?: 'bottom' | 'top' | 'flip';\n}\n\nexport const SelectDropdown = forwardRef<HTMLDivElement, SelectDropdownProps>(\n  (\n    {\n      mounted,\n      transition,\n      transitionDuration,\n      transitionTimingFunction,\n      uuid,\n      shadow,\n      maxDropdownHeight,\n      withinPortal = true,\n      children,\n      classNames,\n      styles,\n      dropdownComponent,\n      referenceElement,\n      direction = 'column',\n      onDirectionChange,\n      switchDirectionOnFlip = false,\n      zIndex = getDefaultZIndex('popover'),\n      dropdownPosition = 'flip',\n      __staticSelector,\n    }: SelectDropdownProps,\n    ref\n  ) => {\n    const { classes } = useStyles(\n      { native: dropdownComponent !== SelectScrollArea },\n      { classNames, styles, name: __staticSelector }\n    );\n\n    const previousPlacement = useRef<Placement>('bottom');\n\n    return (\n      <Popper\n        referenceElement={referenceElement}\n        mounted={mounted}\n        transition={transition}\n        transitionDuration={transitionDuration}\n        exitTransitionDuration={0}\n        transitionTimingFunction={transitionTimingFunction}\n        position={dropdownPosition === 'flip' ? 'bottom' : dropdownPosition}\n        withinPortal={withinPortal}\n        zIndex={zIndex}\n        modifiers={[\n          {\n            name: 'preventOverflow',\n            enabled: false,\n          },\n          {\n            name: 'flip',\n            enabled: dropdownPosition === 'flip',\n          },\n          {\n            // @ts-ignore\n            name: 'sameWidth',\n            enabled: true,\n            phase: 'beforeWrite',\n            requires: ['computeStyles'],\n            fn: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.styles.popper.width = `${state.rects.reference.width}px`;\n            },\n            effect: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n            },\n          },\n          {\n            // @ts-ignore\n            name: 'directionControl',\n            enabled: true,\n            phase: 'main',\n            fn: ({ state }) => {\n              if (previousPlacement.current !== state.placement) {\n                previousPlacement.current = state.placement;\n\n                const nextDirection = state.placement === 'top' ? 'column-reverse' : 'column';\n\n                if (direction !== nextDirection && switchDirectionOnFlip) {\n                  onDirectionChange && onDirectionChange(nextDirection);\n                }\n              }\n            },\n          },\n        ]}\n      >\n        <div style={{ maxHeight: maxDropdownHeight, display: 'flex' }}>\n          <Paper<'div'>\n            radius=\"sm\"\n            component={(dropdownComponent || 'div') as any}\n            id={`${uuid}-items`}\n            aria-labelledby={`${uuid}-label`}\n            role=\"listbox\"\n            className={classes.dropdown}\n            shadow={shadow}\n            ref={ref}\n            onMouseDown={(event) => event.preventDefault()}\n          >\n            <div style={{ display: 'flex', flexDirection: direction, width: '100%' }}>\n              {children}\n            </div>\n          </Paper>\n        </div>\n      </Popper>\n    );\n  }\n);\n\nSelectDropdown.displayName = '@mantine/core/SelectDropdown';\n"]},"metadata":{},"sourceType":"module"}