{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useMantineDefaultProps, useMantineTheme } from '@mantine/styles';\nconst defaultProps = {\n  zIndex: 1,\n  position: \"relative\"\n};\n\nfunction Portal(props) {\n  const {\n    children,\n    zIndex,\n    target,\n    className,\n    position\n  } = useMantineDefaultProps(\"Portal\", defaultProps, props);\n  const theme = useMantineTheme();\n  const [mounted, setMounted] = useState(false);\n  const ref = useRef();\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    ref.current = !target ? document.createElement(\"div\") : typeof target === \"string\" ? document.querySelector(target) : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return () => {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return createPortal( /* @__PURE__ */React.createElement(\"div\", {\n    className,\n    dir: theme.dir,\n    style: {\n      position,\n      zIndex\n    }\n  }, children), ref.current);\n}\n\nPortal.displayName = \"@mantine/core/Portal\";\nexport { Portal };","map":{"version":3,"mappings":";;;;AAIA,MAAMA,YAAY,GAAG;AACnBC,QAAM,EAAE,CADW;AAEnBC,UAAQ,EAAE;AAFS,CAArB;;AAIO,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAC5B,QAAM;AAAEC,YAAF;AAAYJ,UAAZ;AAAoBK,UAApB;AAA4BC,aAA5B;AAAuCL;AAAvC,MAAoDM,sBAAsB,CAAC,QAAD,EAAWR,YAAX,EAAyBI,KAAzB,CAAhF;AACA,QAAMK,KAAK,GAAGC,eAAe,EAA7B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMC,GAAG,GAAGC,MAAM,EAAlB;AACAC,qBAAmB,CAAC,MAAM;AACxBJ,cAAU,CAAC,IAAD,CAAV;AACAE,OAAG,CAACG,OAAJ,GAAc,CAACX,MAAD,GAAUY,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV,GAA0C,OAAOb,MAAP,KAAkB,QAAlB,GAA6BY,QAAQ,CAACE,aAAT,CAAuBd,MAAvB,CAA7B,GAA8DA,MAAtH;;AACA,QAAI,CAACA,MAAL,EAAa;AACXY,cAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BR,GAAG,CAACG,OAA9B;AACD;;AACD,WAAO,MAAM;AACX,OAACX,MAAD,IAAWY,QAAQ,CAACG,IAAT,CAAcE,WAAd,CAA0BT,GAAG,CAACG,OAA9B,CAAX;AACD,KAFD;AAGD,GATkB,EAShB,CAACX,MAAD,CATgB,CAAnB;;AAUA,MAAI,CAACK,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,SAAOa,YAAY,iBAAiBC,KAAK,CAACN,aAAN,CAAoB,KAApB,EAA2B;AAC7DZ,aAD6D;AAE7DmB,OAAG,EAAEjB,KAAK,CAACiB,GAFkD;AAG7DC,SAAK,EAAE;AAAEzB,cAAF;AAAYD;AAAZ;AAHsD,GAA3B,EAIjCI,QAJiC,CAAjB,EAILS,GAAG,CAACG,OAJC,CAAnB;AAKD;;AACDd,MAAM,CAACyB,WAAP,GAAqB,sBAArB","names":["defaultProps","zIndex","position","Portal","props","children","target","className","useMantineDefaultProps","theme","useMantineTheme","mounted","setMounted","useState","ref","useRef","useIsomorphicEffect","current","document","createElement","querySelector","body","appendChild","removeChild","createPortal","React","dir","style","displayName"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Portal/Portal.tsx"],"sourcesContent":["import React, { ReactPortal, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useMantineTheme, useMantineDefaultProps } from '@mantine/styles';\n\nexport interface PortalProps {\n  /** Portal children, for example, modal or popover */\n  children: React.ReactNode;\n\n  /** Root element z-index property */\n  zIndex?: number;\n\n  /** Root element position property */\n  position?: string;\n\n  /** Element where portal should be rendered, by default new div element is created and appended to document.body */\n  target?: HTMLElement | string;\n\n  /** Root element className */\n  className?: string;\n}\n\nconst defaultProps: Partial<PortalProps> = {\n  zIndex: 1,\n  position: 'relative',\n};\n\nexport function Portal(props: PortalProps): ReactPortal {\n  const { children, zIndex, target, className, position } = useMantineDefaultProps(\n    'Portal',\n    defaultProps,\n    props\n  );\n\n  const theme = useMantineTheme();\n  const [mounted, setMounted] = useState(false);\n  const ref = useRef<HTMLElement>();\n\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    ref.current = !target\n      ? document.createElement('div')\n      : typeof target === 'string'\n      ? document.querySelector(target)\n      : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return () => {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={className} dir={theme.dir} style={{ position: position as any, zIndex }}>\n      {children}\n    </div>,\n    ref.current\n  );\n}\n\nPortal.displayName = '@mantine/core/Portal';\n"]},"metadata":{},"sourceType":"module"}