{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useFocusTrap, useScrollLock, useFocusReturn } from '@mantine/hooks';\nimport { getDefaultZIndex, useMantineDefaultProps } from '@mantine/styles';\nimport useStyles from './Drawer.styles.js';\nimport { OptionalPortal } from '../Portal/OptionalPortal.js';\nimport { GroupedTransition } from '../Transition/GroupedTransition.js';\nimport { Box } from '../Box/Box.js';\nimport { Paper } from '../Paper/Paper.js';\nimport { Text } from '../Text/Text.js';\nimport { CloseButton } from '../ActionIcon/CloseButton/CloseButton.js';\nimport { Overlay } from '../Overlay/Overlay.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst transitions = {\n  top: \"slide-down\",\n  bottom: \"slide-up\",\n  left: \"slide-right\",\n  right: \"slide-left\"\n};\nconst rtlTransitions = {\n  top: \"slide-down\",\n  bottom: \"slide-up\",\n  right: \"slide-right\",\n  left: \"slide-left\"\n};\nconst defaultProps = {\n  position: \"left\",\n  size: \"md\",\n  transitionDuration: 250,\n  transitionTimingFunction: \"ease\",\n  zIndex: getDefaultZIndex(\"modal\"),\n  shadow: \"md\",\n  padding: 0,\n  lockScroll: true,\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  withOverlay: true,\n  withCloseButton: true,\n  withinPortal: true\n};\n\nfunction Drawer(props) {\n  const _a = useMantineDefaultProps(\"Drawer\", defaultProps, props),\n        {\n    className,\n    opened,\n    onClose,\n    position,\n    size,\n    trapFocus,\n    lockScroll,\n    closeOnClickOutside,\n    closeOnEscape,\n    transition,\n    transitionDuration,\n    transitionTimingFunction,\n    zIndex,\n    overlayColor,\n    overlayOpacity,\n    children,\n    withOverlay,\n    shadow,\n    padding,\n    title,\n    withCloseButton,\n    closeButtonLabel,\n    classNames,\n    styles,\n    target,\n    withinPortal\n  } = _a,\n        others = __objRest(_a, [\"className\", \"opened\", \"onClose\", \"position\", \"size\", \"trapFocus\", \"lockScroll\", \"closeOnClickOutside\", \"closeOnEscape\", \"transition\", \"transitionDuration\", \"transitionTimingFunction\", \"zIndex\", \"overlayColor\", \"overlayOpacity\", \"children\", \"withOverlay\", \"shadow\", \"padding\", \"title\", \"withCloseButton\", \"closeButtonLabel\", \"classNames\", \"styles\", \"target\", \"withinPortal\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    position,\n    zIndex\n  }, {\n    classNames,\n    styles,\n    name: \"Drawer\"\n  });\n  const focusTrapRef = useFocusTrap(trapFocus && opened);\n  const [, _lockScroll] = useScrollLock();\n  const drawerTransition = transition || (theme.dir === \"rtl\" ? rtlTransitions : transitions)[position];\n\n  const _overlayOpacity = typeof overlayOpacity === \"number\" ? overlayOpacity : theme.colorScheme === \"dark\" ? 0.85 : 0.75;\n\n  const _closeOnEscape = event => {\n    if (event.code === \"Escape\" && closeOnEscape) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (!trapFocus) {\n      window.addEventListener(\"keydown\", _closeOnEscape);\n      return () => window.removeEventListener(\"keydown\", _closeOnEscape);\n    }\n\n    return void 0;\n  }, [trapFocus]);\n  useFocusReturn({\n    opened,\n    transitionDuration: 0\n  });\n  return /* @__PURE__ */React.createElement(OptionalPortal, {\n    withinPortal,\n    zIndex,\n    target\n  }, /* @__PURE__ */React.createElement(GroupedTransition, {\n    onExited: () => _lockScroll(false),\n    onEntered: () => _lockScroll(lockScroll && true),\n    mounted: opened,\n    transitions: {\n      overlay: {\n        duration: transitionDuration / 2,\n        transition: \"fade\",\n        timingFunction: \"ease\"\n      },\n      drawer: {\n        duration: transitionDuration,\n        transition: drawerTransition,\n        timingFunction: transitionTimingFunction\n      }\n    }\n  }, transitionStyles => /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, {\n      [classes.noOverlay]: !withOverlay\n    }, className),\n    role: \"dialog\",\n    \"aria-modal\": true\n  }, others), /* @__PURE__ */React.createElement(Paper, {\n    onMouseDown: event => event.stopPropagation(),\n    className: cx(classes.drawer, className),\n    ref: focusTrapRef,\n    style: transitionStyles.drawer,\n    radius: 0,\n    tabIndex: -1,\n    onKeyDownCapture: event => {\n      var _a2;\n\n      const shouldTrigger = ((_a2 = event.target) == null ? void 0 : _a2.getAttribute(\"data-mantine-stop-propagation\")) !== \"true\";\n      shouldTrigger && event.nativeEvent.code === \"Escape\" && closeOnEscape && onClose();\n    },\n    shadow,\n    p: padding\n  }, (title || withCloseButton) && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.header\n  }, /* @__PURE__ */React.createElement(Text, {\n    className: classes.title\n  }, title), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    iconSize: 16,\n    onClick: onClose,\n    \"aria-label\": closeButtonLabel,\n    className: classes.closeButton\n  })), children), withOverlay && /* @__PURE__ */React.createElement(\"div\", {\n    style: transitionStyles.overlay\n  }, /* @__PURE__ */React.createElement(Overlay, {\n    onMouseDown: () => closeOnClickOutside && onClose(),\n    className: classes.overlay,\n    opacity: _overlayOpacity,\n    zIndex: 0,\n    color: overlayColor || (theme.colorScheme === \"dark\" ? theme.colors.dark[9] : theme.black)\n  })))));\n}\n\nDrawer.displayName = \"@mantine/core/Drawer\";\nexport { Drawer };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","transitions","top","bottom","left","right","rtlTransitions","defaultProps","position","size","transitionDuration","transitionTimingFunction","zIndex","getDefaultZIndex","shadow","padding","lockScroll","closeOnClickOutside","closeOnEscape","trapFocus","withOverlay","withCloseButton","withinPortal","Drawer","props","_a","useMantineDefaultProps","className","opened","onClose","transition","overlayColor","overlayOpacity","children","title","closeButtonLabel","classNames","styles","others","classes","cx","theme","useStyles","name","focusTrapRef","useFocusTrap","_lockScroll","useScrollLock","drawerTransition","dir","_overlayOpacity","colorScheme","_closeOnEscape","event","code","useEffect","window","addEventListener","removeEventListener","useFocusReturn","React","createElement","OptionalPortal","GroupedTransition","onExited","onEntered","mounted","overlay","duration","timingFunction","drawer","transitionStyles","Box","root","noOverlay","role","Paper","onMouseDown","stopPropagation","ref","style","radius","tabIndex","onKeyDownCapture","_a2","shouldTrigger","getAttribute","nativeEvent","p","header","Text","CloseButton","iconSize","onClick","closeButton","Overlay","opacity","color","colors","dark","black","displayName"],"sources":["/Users/marceloperez/node_modules/@mantine/core/src/components/Drawer/Drawer.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useScrollLock, useFocusTrap, useFocusReturn } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineShadow,\n  ClassNames,\n  MantineStyleSystemSize,\n  getDefaultZIndex,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { Paper } from '../Paper';\nimport { Overlay } from '../Overlay';\nimport { OptionalPortal } from '../Portal';\nimport { Text } from '../Text';\nimport { Box } from '../Box';\nimport { CloseButton } from '../ActionIcon';\nimport { GroupedTransition, MantineTransition } from '../Transition';\nimport useStyles, { DrawerPosition } from './Drawer.styles';\n\nexport type DrawerStylesNames = Exclude<ClassNames<typeof useStyles>, 'withOverlay'>;\n\nexport interface DrawerProps\n  extends Omit<DefaultProps<DrawerStylesNames>, MantineStyleSystemSize>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  /** If true drawer is mounted to the dom */\n  opened: boolean;\n\n  /** Called when drawer is closed (Escape key and click outside, depending on options) */\n  onClose(): void;\n\n  /** Drawer body position */\n  position?: DrawerPosition;\n\n  /** Drawer body width (right | left position) or height (top | bottom position), cannot exceed 100vh for height and 100% for width */\n  size?: string | number;\n\n  /** Drawer body shadow from theme or any css shadow value */\n  shadow?: MantineShadow;\n\n  /** Drawer body padding from theme or number for padding in px */\n  padding?: MantineNumberSize;\n\n  /** Drawer z-index property */\n  zIndex?: number;\n\n  /** Disables focus trap */\n  trapFocus?: boolean;\n\n  /** Disables scroll lock */\n  lockScroll?: boolean;\n\n  /** Disable onClock trigger for outside events */\n  closeOnClickOutside?: boolean;\n\n  /** Disable onClock trigger for escape key press */\n  closeOnEscape?: boolean;\n\n  /** Drawer appear and disappear transition, see Transition component for full documentation */\n  transition?: MantineTransition;\n\n  /** Transition duration in ms */\n  transitionDuration?: number;\n\n  /** Drawer transitionTimingFunction css property */\n  transitionTimingFunction?: string;\n\n  /** Removes overlay entirely */\n  withOverlay?: boolean;\n\n  /** Sets overlay opacity, defaults to 0.75 in light theme and to 0.85 in dark theme */\n  overlayOpacity?: number;\n\n  /** Sets overlay color, defaults to theme.black in light theme and to theme.colors.dark[9] in dark theme */\n  overlayColor?: string;\n\n  /** Drawer title, displayed in header before close button */\n  title?: React.ReactNode;\n\n  /** Hides close button if set to false, drawer still can be closed with escape key and by clicking outside */\n  withCloseButton?: boolean;\n\n  /** Close button aria-label */\n  closeButtonLabel?: string;\n\n  /** Target element or selector where drawer portal should be rendered */\n  target?: HTMLElement | string;\n\n  /** Determines whether drawer should be rendered within Portal, defaults to true */\n  withinPortal?: boolean;\n}\n\nconst transitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  left: 'slide-right',\n  right: 'slide-left',\n};\n\nconst rtlTransitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  right: 'slide-right',\n  left: 'slide-left',\n};\n\nconst defaultProps: Partial<DrawerProps> = {\n  position: 'left',\n  size: 'md',\n  transitionDuration: 250,\n  transitionTimingFunction: 'ease',\n  zIndex: getDefaultZIndex('modal'),\n  shadow: 'md',\n  padding: 0,\n  lockScroll: true,\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  withOverlay: true,\n  withCloseButton: true,\n  withinPortal: true,\n};\n\nexport function Drawer(props: DrawerProps) {\n  const {\n    className,\n    opened,\n    onClose,\n    position,\n    size,\n    trapFocus,\n    lockScroll,\n    closeOnClickOutside,\n    closeOnEscape,\n    transition,\n    transitionDuration,\n    transitionTimingFunction,\n    zIndex,\n    overlayColor,\n    overlayOpacity,\n    children,\n    withOverlay,\n    shadow,\n    padding,\n    title,\n    withCloseButton,\n    closeButtonLabel,\n    classNames,\n    styles,\n    target,\n    withinPortal,\n    ...others\n  } = useMantineDefaultProps('Drawer', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles(\n    { size, position, zIndex },\n    { classNames, styles, name: 'Drawer' }\n  );\n\n  const focusTrapRef = useFocusTrap(trapFocus && opened);\n\n  const [, _lockScroll] = useScrollLock();\n\n  const drawerTransition =\n    transition || (theme.dir === 'rtl' ? rtlTransitions : transitions)[position];\n  const _overlayOpacity =\n    typeof overlayOpacity === 'number'\n      ? overlayOpacity\n      : theme.colorScheme === 'dark'\n      ? 0.85\n      : 0.75;\n\n  const _closeOnEscape = (event: KeyboardEvent) => {\n    if (event.code === 'Escape' && closeOnEscape) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (!trapFocus) {\n      window.addEventListener('keydown', _closeOnEscape);\n      return () => window.removeEventListener('keydown', _closeOnEscape);\n    }\n\n    return undefined;\n  }, [trapFocus]);\n\n  useFocusReturn({ opened, transitionDuration: 0 });\n\n  return (\n    <OptionalPortal withinPortal={withinPortal} zIndex={zIndex} target={target}>\n      <GroupedTransition\n        onExited={() => _lockScroll(false)}\n        onEntered={() => _lockScroll(lockScroll && true)}\n        mounted={opened}\n        transitions={{\n          overlay: { duration: transitionDuration / 2, transition: 'fade', timingFunction: 'ease' },\n          drawer: {\n            duration: transitionDuration,\n            transition: drawerTransition,\n            timingFunction: transitionTimingFunction,\n          },\n        }}\n      >\n        {(transitionStyles) => (\n          <Box\n            className={cx(classes.root, { [classes.noOverlay]: !withOverlay }, className)}\n            role=\"dialog\"\n            aria-modal\n            {...others}\n          >\n            <Paper<'div'>\n              onMouseDown={(event) => event.stopPropagation()}\n              className={cx(classes.drawer, className)}\n              ref={focusTrapRef}\n              style={transitionStyles.drawer}\n              radius={0}\n              tabIndex={-1}\n              onKeyDownCapture={(event) => {\n                const shouldTrigger =\n                  (event.target as any)?.getAttribute('data-mantine-stop-propagation') !== 'true';\n\n                shouldTrigger && event.nativeEvent.code === 'Escape' && closeOnEscape && onClose();\n              }}\n              shadow={shadow}\n              p={padding}\n            >\n              {(title || withCloseButton) && (\n                <div className={classes.header}>\n                  <Text className={classes.title}>{title}</Text>\n\n                  {withCloseButton && (\n                    <CloseButton\n                      iconSize={16}\n                      onClick={onClose}\n                      aria-label={closeButtonLabel}\n                      className={classes.closeButton}\n                    />\n                  )}\n                </div>\n              )}\n              {children}\n            </Paper>\n\n            {withOverlay && (\n              <div style={transitionStyles.overlay}>\n                <Overlay\n                  onMouseDown={() => closeOnClickOutside && onClose()}\n                  className={classes.overlay}\n                  opacity={_overlayOpacity}\n                  zIndex={0}\n                  color={\n                    overlayColor ||\n                    (theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.black)\n                  }\n                />\n              </div>\n            )}\n          </Box>\n        )}\n      </GroupedTransition>\n    </OptionalPortal>\n  );\n}\n\nDrawer.displayName = '@mantine/core/Drawer';\n"]},"metadata":{},"sourceType":"module"}