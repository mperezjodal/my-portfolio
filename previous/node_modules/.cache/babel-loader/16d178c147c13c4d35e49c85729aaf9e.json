{"ast":null,"code":"import { useRef, useCallback, useEffect } from 'react';\nimport { useReducedMotion } from '../use-reduced-motion/use-reduced-motion.js';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nimport { easeInOutQuad } from './utils/ease-in-out-quad.js';\nimport { getRelativePosition } from './utils/get-relative-position.js';\nimport { getScrollStart } from './utils/get-scroll-start.js';\nimport { setScrollParam } from './utils/set-scroll-param.js';\n\nfunction useScrollIntoView() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 1250 : _ref$duration,\n      _ref$axis = _ref.axis,\n      axis = _ref$axis === void 0 ? \"y\" : _ref$axis,\n      onScrollFinish = _ref.onScrollFinish,\n      _ref$easing = _ref.easing,\n      easing = _ref$easing === void 0 ? easeInOutQuad : _ref$easing,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset,\n      _ref$cancelable = _ref.cancelable,\n      cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n      _ref$isList = _ref.isList,\n      isList = _ref$isList === void 0 ? false : _ref$isList;\n\n  var frameID = useRef(0);\n  var startTime = useRef(0);\n  var shouldStop = useRef(false);\n  var scrollableRef = useRef(null);\n  var targetRef = useRef(null);\n  var reducedMotion = useReducedMotion();\n\n  var cancel = function cancel() {\n    if (frameID.current) {\n      cancelAnimationFrame(frameID.current);\n    }\n  };\n\n  var scrollIntoView = useCallback(function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$alignment = _ref2.alignment,\n        alignment = _ref2$alignment === void 0 ? \"start\" : _ref2$alignment;\n\n    var _a;\n\n    shouldStop.current = false;\n\n    if (frameID.current) {\n      cancel();\n    }\n\n    var start = (_a = getScrollStart({\n      parent: scrollableRef.current,\n      axis: axis\n    })) != null ? _a : 0;\n    var change = getRelativePosition({\n      parent: scrollableRef.current,\n      target: targetRef.current,\n      axis: axis,\n      alignment: alignment,\n      offset: offset,\n      isList: isList\n    }) - (scrollableRef.current ? 0 : start);\n\n    function animateScroll() {\n      if (startTime.current === 0) {\n        startTime.current = performance.now();\n      }\n\n      var now = performance.now();\n      var elapsed = now - startTime.current;\n      var t = reducedMotion || duration === 0 ? 1 : elapsed / duration;\n      var distance = start + change * easing(t);\n      setScrollParam({\n        parent: scrollableRef.current,\n        axis: axis,\n        distance: distance\n      });\n\n      if (!shouldStop.current && t < 1) {\n        frameID.current = requestAnimationFrame(animateScroll);\n      } else {\n        typeof onScrollFinish === \"function\" && onScrollFinish();\n        startTime.current = 0;\n        frameID.current = 0;\n        cancel();\n      }\n    }\n\n    animateScroll();\n  }, [scrollableRef.current]);\n\n  var handleStop = function handleStop() {\n    if (cancelable) {\n      shouldStop.current = true;\n    }\n  };\n\n  useWindowEvent(\"wheel\", handleStop, {\n    passive: true\n  });\n  useWindowEvent(\"touchmove\", handleStop, {\n    passive: true\n  });\n  useEffect(function () {\n    return cancel;\n  }, []);\n  return {\n    scrollableRef: scrollableRef,\n    targetRef: targetRef,\n    scrollIntoView: scrollIntoView,\n    cancel: cancel\n  };\n}\n\nexport { useScrollIntoView };","map":{"version":3,"mappings":"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","names":["useScrollIntoView","duration","axis","onScrollFinish","easing","easeInOutQuad","offset","cancelable","isList","frameID","useRef","startTime","shouldStop","scrollableRef","targetRef","reducedMotion","useReducedMotion","cancel","current","cancelAnimationFrame","scrollIntoView","useCallback","alignment","_a","start","getScrollStart","parent","change","getRelativePosition","target","animateScroll","performance","now","elapsed","t","distance","setScrollParam","requestAnimationFrame","handleStop","useWindowEvent","passive","useEffect"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-scroll-into-view/use-scroll-into-view.ts"],"sourcesContent":["import { useCallback, useRef, useEffect } from 'react';\nimport { useReducedMotion } from '../use-reduced-motion/use-reduced-motion';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\nimport { easeInOutQuad } from './utils/ease-in-out-quad';\nimport { getRelativePosition } from './utils/get-relative-position';\nimport { getScrollStart } from './utils/get-scroll-start';\nimport { setScrollParam } from './utils/set-scroll-param';\n\ninterface ScrollIntoViewAnimation {\n  /** target element alignment relatively to parent based on current axis */\n  alignment?: 'start' | 'end' | 'center';\n}\n\ninterface ScrollIntoViewParams {\n  /** callback fired after scroll */\n  onScrollFinish?: () => void;\n\n  /** duration of scroll in milliseconds */\n  duration?: number;\n\n  /** axis of scroll */\n  axis?: 'x' | 'y';\n\n  /** custom mathematical easing function */\n  easing?: (t: number) => number;\n\n  /** additional distance between nearest edge and element */\n  offset?: number;\n\n  /** indicator if animation may be interrupted by user scrolling */\n  cancelable?: boolean;\n\n  /** prevents content jumping in scrolling lists with multiple targets */\n  isList?: boolean;\n}\n\nexport function useScrollIntoView<\n  Target extends HTMLElement,\n  Parent extends HTMLElement | null = null\n>({\n  duration = 1250,\n  axis = 'y',\n  onScrollFinish,\n  easing = easeInOutQuad,\n  offset = 0,\n  cancelable = true,\n  isList = false,\n}: ScrollIntoViewParams = {}) {\n  const frameID = useRef(0);\n  const startTime = useRef(0);\n  const shouldStop = useRef(false);\n\n  const scrollableRef = useRef<Parent>(null);\n  const targetRef = useRef<Target>(null);\n\n  const reducedMotion = useReducedMotion();\n\n  const cancel = (): void => {\n    if (frameID.current) {\n      cancelAnimationFrame(frameID.current);\n    }\n  };\n\n  const scrollIntoView = useCallback(\n    ({ alignment = 'start' }: ScrollIntoViewAnimation = {}) => {\n      shouldStop.current = false;\n\n      if (frameID.current) {\n        cancel();\n      }\n\n      const start = getScrollStart({ parent: scrollableRef.current, axis }) ?? 0;\n\n      const change =\n        getRelativePosition({\n          parent: scrollableRef.current,\n          target: targetRef.current,\n          axis,\n          alignment,\n          offset,\n          isList,\n        }) - (scrollableRef.current ? 0 : start);\n\n      function animateScroll() {\n        if (startTime.current === 0) {\n          startTime.current = performance.now();\n        }\n\n        const now = performance.now();\n        const elapsed = now - startTime.current;\n\n        // easing timing progress\n        const t = reducedMotion || duration === 0 ? 1 : elapsed / duration;\n\n        const distance = start + change * easing(t);\n\n        setScrollParam({\n          parent: scrollableRef.current,\n          axis,\n          distance,\n        });\n\n        if (!shouldStop.current && t < 1) {\n          frameID.current = requestAnimationFrame(animateScroll);\n        } else {\n          typeof onScrollFinish === 'function' && onScrollFinish();\n          startTime.current = 0;\n          frameID.current = 0;\n          cancel();\n        }\n      }\n      animateScroll();\n    },\n    [scrollableRef.current]\n  );\n\n  const handleStop = () => {\n    if (cancelable) {\n      shouldStop.current = true;\n    }\n  };\n\n  /**\n   * detection of one of these events stops scroll animation\n   * wheel - mouse wheel / touch pad\n   * touchmove - any touchable device\n   */\n\n  useWindowEvent('wheel', handleStop, {\n    passive: true,\n  });\n\n  useWindowEvent('touchmove', handleStop, {\n    passive: true,\n  });\n\n  // cleanup requestAnimationFrame\n  useEffect(() => cancel, []);\n\n  return {\n    scrollableRef,\n    targetRef,\n    scrollIntoView,\n    cancel,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}