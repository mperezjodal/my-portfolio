{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction serializeJSON(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(\"@mantine/hooks use-local-storage: Failed to serialize the value\");\n  }\n}\n\nfunction deserializeJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction useLocalStorage(_ref) {\n  let {\n    key,\n    defaultValue = void 0,\n    deserialize = deserializeJSON,\n    serialize = serializeJSON\n  } = _ref;\n\n  var _a;\n\n  const [value, setValue] = useState(typeof window !== \"undefined\" && \"localStorage\" in window ? deserialize((_a = window.localStorage.getItem(key)) != null ? _a : void 0) : defaultValue != null ? defaultValue : \"\");\n  const setLocalStorageValue = useCallback(val => {\n    if (val instanceof Function) {\n      setValue(current => {\n        const result = val(current);\n        window.localStorage.setItem(key, serialize(result));\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, serialize(val));\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", event => {\n    var _a2;\n\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize((_a2 = event.newValue) != null ? _a2 : void 0));\n    }\n  });\n  useEffect(() => {\n    if (defaultValue !== void 0 && value === void 0) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  return [value === void 0 ? defaultValue : value, setLocalStorageValue];\n}\n\nconst useLocalStorageValue = useLocalStorage;\nexport { useLocalStorage, useLocalStorageValue };","map":{"version":3,"mappings":";;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAI;AACF,WAAOC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAP;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;AACD;AACF;;AACD,SAASC,eAAT,CAAyBL,KAAzB,EAAgC;AAC9B,MAAI;AACF,WAAOC,IAAI,CAACK,KAAL,CAAWN,KAAX,CAAP;AACD,GAFD,CAEE,OAAOO,CAAP,EAAU;AACV,WAAOP,KAAP;AACD;AACF;;AACM,SAASQ,eAAT,OAKJ;AAAA,MAL6B;AAC9BC,OAD8B;AAE9BC,gBAAY,GAAG,KAAK,CAFU;AAG9BC,eAAW,GAAGN,eAHgB;AAI9BO,aAAS,GAAGb;AAJkB,GAK7B;;AACD,MAAIc,EAAJ;;AACA,QAAM,CAACb,KAAD,EAAQc,QAAR,IAAoBC,QAAQ,CAAC,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,kBAAkBA,MAAnD,GAA4DL,WAAW,CAAC,CAACE,EAAE,GAAGG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BT,GAA5B,CAAN,KAA2C,IAA3C,GAAkDI,EAAlD,GAAuD,KAAK,CAA7D,CAAvE,GAAyIH,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsC,EAAhL,CAAlC;AACA,QAAMS,oBAAoB,GAAGC,WAAW,CAAEC,GAAD,IAAS;AAChD,QAAIA,GAAG,YAAYC,QAAnB,EAA6B;AAC3BR,cAAQ,CAAES,OAAD,IAAa;AACpB,cAAMC,MAAM,GAAGH,GAAG,CAACE,OAAD,CAAlB;AACAP,cAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4BhB,GAA5B,EAAiCG,SAAS,CAACY,MAAD,CAA1C;AACA,eAAOA,MAAP;AACD,OAJO,CAAR;AAKD,KAND,MAMO;AACLR,YAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4BhB,GAA5B,EAAiCG,SAAS,CAACS,GAAD,CAA1C;AACAP,cAAQ,CAACO,GAAD,CAAR;AACD;AACF,GAXuC,EAWrC,CAACZ,GAAD,CAXqC,CAAxC;AAYAiB,gBAAc,CAAC,SAAD,EAAaC,KAAD,IAAW;AACnC,QAAIC,GAAJ;;AACA,QAAID,KAAK,CAACE,WAAN,KAAsBb,MAAM,CAACC,YAA7B,IAA6CU,KAAK,CAAClB,GAAN,KAAcA,GAA/D,EAAoE;AAClEK,cAAQ,CAACH,WAAW,CAAC,CAACiB,GAAG,GAAGD,KAAK,CAACG,QAAb,KAA0B,IAA1B,GAAiCF,GAAjC,GAAuC,KAAK,CAA7C,CAAZ,CAAR;AACD;AACF,GALa,CAAd;AAMAG,WAAS,CAAC,MAAM;AACd,QAAIrB,YAAY,KAAK,KAAK,CAAtB,IAA2BV,KAAK,KAAK,KAAK,CAA9C,EAAiD;AAC/CmB,0BAAoB,CAACT,YAAD,CAApB;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,EAAeV,KAAf,EAAsBmB,oBAAtB,CAJM,CAAT;AAKA,SAAO,CAACnB,KAAK,KAAK,KAAK,CAAf,GAAmBU,YAAnB,GAAkCV,KAAnC,EAA0CmB,oBAA1C,CAAP;AACD;;AACW,MAACa,oBAAoB,GAAGxB,eAAxB","names":["serializeJSON","value","JSON","stringify","error","Error","deserializeJSON","parse","e","useLocalStorage","key","defaultValue","deserialize","serialize","_a","setValue","useState","window","localStorage","getItem","setLocalStorageValue","useCallback","val","Function","current","result","setItem","useWindowEvent","event","_a2","storageArea","newValue","useEffect","useLocalStorageValue"],"sources":["/Users/marceloperez/node_modules/@mantine/hooks/src/use-local-storage/use-local-storage.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface UseLocalStorage<T> {\n  key: string;\n  defaultValue?: T;\n  serialize?(value: T): string;\n  deserialize?(value: string): T;\n}\n\nfunction serializeJSON<T>(value: T) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error('@mantine/hooks use-local-storage: Failed to serialize the value');\n  }\n}\n\nfunction deserializeJSON(value: string) {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\n\nexport function useLocalStorage<T = string>({\n  key,\n  defaultValue = undefined,\n  deserialize = deserializeJSON,\n  serialize = serializeJSON,\n}: UseLocalStorage<T>) {\n  const [value, setValue] = useState<T>(\n    typeof window !== 'undefined' && 'localStorage' in window\n      ? deserialize(window.localStorage.getItem(key) ?? undefined)\n      : ((defaultValue ?? '') as T)\n  );\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (val instanceof Function) {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, serialize(result));\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, serialize(val));\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize(event.newValue ?? undefined));\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue !== undefined && value === undefined) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  return [value === undefined ? defaultValue : value, setLocalStorageValue] as const;\n}\n\nexport const useLocalStorageValue = useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}